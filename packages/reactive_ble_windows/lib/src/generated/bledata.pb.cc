// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bledata.proto

#include "bledata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bledata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenericFailure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uuid;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CharacteristicAddress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DiscoveredCharacteristic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServiceDataEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServiceWithCharacteristics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServicesWithCharacteristics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bledata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DiscoveredService;
}  // namespace protobuf_bledata_2eproto
class ScanForDevicesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanForDevicesRequest>
      _instance;
} _ScanForDevicesRequest_default_instance_;
class DeviceScanInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceScanInfo>
      _instance;
} _DeviceScanInfo_default_instance_;
class ConnectToDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectToDeviceRequest>
      _instance;
} _ConnectToDeviceRequest_default_instance_;
class DeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceInfo>
      _instance;
} _DeviceInfo_default_instance_;
class DisconnectFromDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisconnectFromDeviceRequest>
      _instance;
} _DisconnectFromDeviceRequest_default_instance_;
class ClearGattCacheRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearGattCacheRequest>
      _instance;
} _ClearGattCacheRequest_default_instance_;
class ClearGattCacheInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearGattCacheInfo>
      _instance;
} _ClearGattCacheInfo_default_instance_;
class NotifyCharacteristicRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyCharacteristicRequest>
      _instance;
} _NotifyCharacteristicRequest_default_instance_;
class NotifyNoMoreCharacteristicRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyNoMoreCharacteristicRequest>
      _instance;
} _NotifyNoMoreCharacteristicRequest_default_instance_;
class ReadCharacteristicRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadCharacteristicRequest>
      _instance;
} _ReadCharacteristicRequest_default_instance_;
class CharacteristicValueInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharacteristicValueInfo>
      _instance;
} _CharacteristicValueInfo_default_instance_;
class WriteCharacteristicRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteCharacteristicRequest>
      _instance;
} _WriteCharacteristicRequest_default_instance_;
class WriteCharacteristicInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteCharacteristicInfo>
      _instance;
} _WriteCharacteristicInfo_default_instance_;
class NegotiateMtuRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NegotiateMtuRequest>
      _instance;
} _NegotiateMtuRequest_default_instance_;
class NegotiateMtuInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NegotiateMtuInfo>
      _instance;
} _NegotiateMtuInfo_default_instance_;
class BleStatusInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BleStatusInfo>
      _instance;
} _BleStatusInfo_default_instance_;
class ChangeConnectionPriorityRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeConnectionPriorityRequest>
      _instance;
} _ChangeConnectionPriorityRequest_default_instance_;
class ChangeConnectionPriorityInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeConnectionPriorityInfo>
      _instance;
} _ChangeConnectionPriorityInfo_default_instance_;
class CharacteristicAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharacteristicAddress>
      _instance;
} _CharacteristicAddress_default_instance_;
class ServiceDataEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceDataEntry>
      _instance;
} _ServiceDataEntry_default_instance_;
class ServicesWithCharacteristicsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServicesWithCharacteristics>
      _instance;
} _ServicesWithCharacteristics_default_instance_;
class ServiceWithCharacteristicsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceWithCharacteristics>
      _instance;
} _ServiceWithCharacteristics_default_instance_;
class DiscoverServicesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscoverServicesRequest>
      _instance;
} _DiscoverServicesRequest_default_instance_;
class DiscoverServicesInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscoverServicesInfo>
      _instance;
} _DiscoverServicesInfo_default_instance_;
class DiscoveredServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscoveredService>
      _instance;
} _DiscoveredService_default_instance_;
class DiscoveredCharacteristicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscoveredCharacteristic>
      _instance;
} _DiscoveredCharacteristic_default_instance_;
class UuidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uuid>
      _instance;
} _Uuid_default_instance_;
class GenericFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericFailure>
      _instance;
} _GenericFailure_default_instance_;
namespace protobuf_bledata_2eproto {
static void InitDefaultsScanForDevicesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ScanForDevicesRequest_default_instance_;
    new (ptr) ::ScanForDevicesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScanForDevicesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScanForDevicesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScanForDevicesRequest}, {
      &protobuf_bledata_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsDeviceScanInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeviceScanInfo_default_instance_;
    new (ptr) ::DeviceScanInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeviceScanInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DeviceScanInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDeviceScanInfo}, {
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,
      &protobuf_bledata_2eproto::scc_info_ServiceDataEntry.base,
      &protobuf_bledata_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsConnectToDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConnectToDeviceRequest_default_instance_;
    new (ptr) ::ConnectToDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConnectToDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectToDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectToDeviceRequest}, {
      &protobuf_bledata_2eproto::scc_info_ServicesWithCharacteristics.base,}};

static void InitDefaultsDeviceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeviceInfo_default_instance_;
    new (ptr) ::DeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeviceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceInfo}, {
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,}};

static void InitDefaultsDisconnectFromDeviceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DisconnectFromDeviceRequest_default_instance_;
    new (ptr) ::DisconnectFromDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DisconnectFromDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DisconnectFromDeviceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisconnectFromDeviceRequest}, {}};

static void InitDefaultsClearGattCacheRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClearGattCacheRequest_default_instance_;
    new (ptr) ::ClearGattCacheRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClearGattCacheRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClearGattCacheRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClearGattCacheRequest}, {}};

static void InitDefaultsClearGattCacheInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClearGattCacheInfo_default_instance_;
    new (ptr) ::ClearGattCacheInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClearGattCacheInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClearGattCacheInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClearGattCacheInfo}, {
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,}};

static void InitDefaultsNotifyCharacteristicRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NotifyCharacteristicRequest_default_instance_;
    new (ptr) ::NotifyCharacteristicRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NotifyCharacteristicRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NotifyCharacteristicRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNotifyCharacteristicRequest}, {
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base,}};

static void InitDefaultsNotifyNoMoreCharacteristicRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NotifyNoMoreCharacteristicRequest_default_instance_;
    new (ptr) ::NotifyNoMoreCharacteristicRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NotifyNoMoreCharacteristicRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NotifyNoMoreCharacteristicRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNotifyNoMoreCharacteristicRequest}, {
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base,}};

static void InitDefaultsReadCharacteristicRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReadCharacteristicRequest_default_instance_;
    new (ptr) ::ReadCharacteristicRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReadCharacteristicRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadCharacteristicRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadCharacteristicRequest}, {
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base,}};

static void InitDefaultsCharacteristicValueInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CharacteristicValueInfo_default_instance_;
    new (ptr) ::CharacteristicValueInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CharacteristicValueInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CharacteristicValueInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCharacteristicValueInfo}, {
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base,
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,}};

static void InitDefaultsWriteCharacteristicRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WriteCharacteristicRequest_default_instance_;
    new (ptr) ::WriteCharacteristicRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WriteCharacteristicRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteCharacteristicRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteCharacteristicRequest}, {
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base,}};

static void InitDefaultsWriteCharacteristicInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WriteCharacteristicInfo_default_instance_;
    new (ptr) ::WriteCharacteristicInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WriteCharacteristicInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WriteCharacteristicInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWriteCharacteristicInfo}, {
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base,
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,}};

static void InitDefaultsNegotiateMtuRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NegotiateMtuRequest_default_instance_;
    new (ptr) ::NegotiateMtuRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NegotiateMtuRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NegotiateMtuRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNegotiateMtuRequest}, {}};

static void InitDefaultsNegotiateMtuInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NegotiateMtuInfo_default_instance_;
    new (ptr) ::NegotiateMtuInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NegotiateMtuInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NegotiateMtuInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNegotiateMtuInfo}, {
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,}};

static void InitDefaultsBleStatusInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BleStatusInfo_default_instance_;
    new (ptr) ::BleStatusInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BleStatusInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BleStatusInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBleStatusInfo}, {}};

static void InitDefaultsChangeConnectionPriorityRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ChangeConnectionPriorityRequest_default_instance_;
    new (ptr) ::ChangeConnectionPriorityRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeConnectionPriorityRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeConnectionPriorityRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeConnectionPriorityRequest}, {}};

static void InitDefaultsChangeConnectionPriorityInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ChangeConnectionPriorityInfo_default_instance_;
    new (ptr) ::ChangeConnectionPriorityInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeConnectionPriorityInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChangeConnectionPriorityInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChangeConnectionPriorityInfo}, {
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base,}};

static void InitDefaultsCharacteristicAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CharacteristicAddress_default_instance_;
    new (ptr) ::CharacteristicAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CharacteristicAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CharacteristicAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCharacteristicAddress}, {
      &protobuf_bledata_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsServiceDataEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ServiceDataEntry_default_instance_;
    new (ptr) ::ServiceDataEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceDataEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServiceDataEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServiceDataEntry}, {
      &protobuf_bledata_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsServicesWithCharacteristics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ServicesWithCharacteristics_default_instance_;
    new (ptr) ::ServicesWithCharacteristics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServicesWithCharacteristics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServicesWithCharacteristics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServicesWithCharacteristics}, {
      &protobuf_bledata_2eproto::scc_info_ServiceWithCharacteristics.base,}};

static void InitDefaultsServiceWithCharacteristics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ServiceWithCharacteristics_default_instance_;
    new (ptr) ::ServiceWithCharacteristics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceWithCharacteristics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServiceWithCharacteristics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServiceWithCharacteristics}, {
      &protobuf_bledata_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsDiscoverServicesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DiscoverServicesRequest_default_instance_;
    new (ptr) ::DiscoverServicesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DiscoverServicesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiscoverServicesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscoverServicesRequest}, {}};

static void InitDefaultsDiscoverServicesInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DiscoverServicesInfo_default_instance_;
    new (ptr) ::DiscoverServicesInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DiscoverServicesInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DiscoverServicesInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDiscoverServicesInfo}, {
      &protobuf_bledata_2eproto::scc_info_DiscoveredService.base,}};

static void InitDefaultsDiscoveredService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DiscoveredService_default_instance_;
    new (ptr) ::DiscoveredService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DiscoveredService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DiscoveredService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDiscoveredService}, {
      &protobuf_bledata_2eproto::scc_info_Uuid.base,
      &protobuf_bledata_2eproto::scc_info_DiscoveredCharacteristic.base,}};

static void InitDefaultsDiscoveredCharacteristic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DiscoveredCharacteristic_default_instance_;
    new (ptr) ::DiscoveredCharacteristic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DiscoveredCharacteristic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DiscoveredCharacteristic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDiscoveredCharacteristic}, {
      &protobuf_bledata_2eproto::scc_info_Uuid.base,}};

static void InitDefaultsUuid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Uuid_default_instance_;
    new (ptr) ::Uuid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Uuid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uuid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUuid}, {}};

static void InitDefaultsGenericFailure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GenericFailure_default_instance_;
    new (ptr) ::GenericFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GenericFailure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenericFailure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenericFailure}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ScanForDevicesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceScanInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectToDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisconnectFromDeviceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClearGattCacheRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClearGattCacheInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyCharacteristicRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyNoMoreCharacteristicRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadCharacteristicRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CharacteristicValueInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteCharacteristicRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteCharacteristicInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NegotiateMtuRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NegotiateMtuInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BleStatusInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeConnectionPriorityRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeConnectionPriorityInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CharacteristicAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceDataEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServicesWithCharacteristics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceWithCharacteristics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscoverServicesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscoverServicesInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscoveredService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscoveredCharacteristic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Uuid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericFailure.base);
}

::google::protobuf::Metadata file_level_metadata[28];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScanForDevicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScanForDevicesRequest, serviceuuids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScanForDevicesRequest, scanmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScanForDevicesRequest, requirelocationservicesenabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, failure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, servicedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, manufacturerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, serviceuuids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceScanInfo, rssi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectToDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectToDeviceRequest, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectToDeviceRequest, serviceswithcharacteristicstodiscover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectToDeviceRequest, timeoutinms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceInfo, connectionstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeviceInfo, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DisconnectFromDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DisconnectFromDeviceRequest, deviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClearGattCacheRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClearGattCacheRequest, deviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClearGattCacheInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClearGattCacheInfo, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyCharacteristicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyCharacteristicRequest, characteristic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyNoMoreCharacteristicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NotifyNoMoreCharacteristicRequest, characteristic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadCharacteristicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadCharacteristicRequest, characteristic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicValueInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicValueInfo, characteristic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicValueInfo, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicValueInfo, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WriteCharacteristicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WriteCharacteristicRequest, characteristic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WriteCharacteristicRequest, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WriteCharacteristicInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WriteCharacteristicInfo, characteristic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WriteCharacteristicInfo, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuRequest, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuRequest, mtusize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuInfo, mtusize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NegotiateMtuInfo, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BleStatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BleStatusInfo, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeConnectionPriorityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeConnectionPriorityRequest, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeConnectionPriorityRequest, priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeConnectionPriorityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeConnectionPriorityInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeConnectionPriorityInfo, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicAddress, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicAddress, serviceuuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CharacteristicAddress, characteristicuuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceDataEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceDataEntry, serviceuuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceDataEntry, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServicesWithCharacteristics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServicesWithCharacteristics, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceWithCharacteristics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceWithCharacteristics, serviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceWithCharacteristics, characteristics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoverServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoverServicesRequest, deviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoverServicesInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoverServicesInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoverServicesInfo, services_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredService, serviceuuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredService, characteristicuuids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredService, includedservices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredService, characteristics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, characteristicid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, serviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, isreadable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, iswritablewithresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, iswritablewithoutresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, isnotifiable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DiscoveredCharacteristic, isindicatable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Uuid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Uuid, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GenericFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GenericFailure, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GenericFailure, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ScanForDevicesRequest)},
  { 8, -1, sizeof(::DeviceScanInfo)},
  { 20, -1, sizeof(::ConnectToDeviceRequest)},
  { 28, -1, sizeof(::DeviceInfo)},
  { 36, -1, sizeof(::DisconnectFromDeviceRequest)},
  { 42, -1, sizeof(::ClearGattCacheRequest)},
  { 48, -1, sizeof(::ClearGattCacheInfo)},
  { 54, -1, sizeof(::NotifyCharacteristicRequest)},
  { 60, -1, sizeof(::NotifyNoMoreCharacteristicRequest)},
  { 66, -1, sizeof(::ReadCharacteristicRequest)},
  { 72, -1, sizeof(::CharacteristicValueInfo)},
  { 80, -1, sizeof(::WriteCharacteristicRequest)},
  { 87, -1, sizeof(::WriteCharacteristicInfo)},
  { 94, -1, sizeof(::NegotiateMtuRequest)},
  { 101, -1, sizeof(::NegotiateMtuInfo)},
  { 109, -1, sizeof(::BleStatusInfo)},
  { 115, -1, sizeof(::ChangeConnectionPriorityRequest)},
  { 122, -1, sizeof(::ChangeConnectionPriorityInfo)},
  { 129, -1, sizeof(::CharacteristicAddress)},
  { 137, -1, sizeof(::ServiceDataEntry)},
  { 144, -1, sizeof(::ServicesWithCharacteristics)},
  { 150, -1, sizeof(::ServiceWithCharacteristics)},
  { 157, -1, sizeof(::DiscoverServicesRequest)},
  { 163, -1, sizeof(::DiscoverServicesInfo)},
  { 170, -1, sizeof(::DiscoveredService)},
  { 179, -1, sizeof(::DiscoveredCharacteristic)},
  { 191, -1, sizeof(::Uuid)},
  { 197, -1, sizeof(::GenericFailure)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScanForDevicesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeviceScanInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConnectToDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeviceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DisconnectFromDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClearGattCacheRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClearGattCacheInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NotifyCharacteristicRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NotifyNoMoreCharacteristicRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReadCharacteristicRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CharacteristicValueInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WriteCharacteristicRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WriteCharacteristicInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NegotiateMtuRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NegotiateMtuInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BleStatusInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChangeConnectionPriorityRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChangeConnectionPriorityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CharacteristicAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServiceDataEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServicesWithCharacteristics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServiceWithCharacteristics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DiscoverServicesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DiscoverServicesInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DiscoveredService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DiscoveredCharacteristic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Uuid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GenericFailure_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bledata.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rbledata.proto\"n\n\025ScanForDevicesRequest"
      "\022\033\n\014serviceUuids\030\001 \003(\0132\005.Uuid\022\020\n\010scanMod"
      "e\030\002 \001(\005\022&\n\036requireLocationServicesEnable"
      "d\030\003 \001(\010\"\271\001\n\016DeviceScanInfo\022\n\n\002id\030\001 \001(\t\022\014"
      "\n\004name\030\002 \001(\t\022 \n\007failure\030\003 \001(\0132\017.GenericF"
      "ailure\022&\n\013serviceData\030\004 \003(\0132\021.ServiceDat"
      "aEntry\022\030\n\020manufacturerData\030\006 \001(\014\022\033\n\014serv"
      "iceUuids\030\007 \003(\0132\005.Uuid\022\014\n\004rssi\030\005 \001(\005\"\214\001\n\026"
      "ConnectToDeviceRequest\022\020\n\010deviceId\030\001 \001(\t"
      "\022K\n%servicesWithCharacteristicsToDiscove"
      "r\030\002 \001(\0132\034.ServicesWithCharacteristics\022\023\n"
      "\013timeoutInMs\030\003 \001(\005\"S\n\nDeviceInfo\022\n\n\002id\030\001"
      " \001(\t\022\027\n\017connectionState\030\002 \001(\005\022 \n\007failure"
      "\030\003 \001(\0132\017.GenericFailure\"/\n\033DisconnectFro"
      "mDeviceRequest\022\020\n\010deviceId\030\001 \001(\t\")\n\025Clea"
      "rGattCacheRequest\022\020\n\010deviceId\030\001 \001(\t\"6\n\022C"
      "learGattCacheInfo\022 \n\007failure\030\001 \001(\0132\017.Gen"
      "ericFailure\"M\n\033NotifyCharacteristicReque"
      "st\022.\n\016characteristic\030\001 \001(\0132\026.Characteris"
      "ticAddress\"S\n!NotifyNoMoreCharacteristic"
      "Request\022.\n\016characteristic\030\001 \001(\0132\026.Charac"
      "teristicAddress\"K\n\031ReadCharacteristicReq"
      "uest\022.\n\016characteristic\030\001 \001(\0132\026.Character"
      "isticAddress\"z\n\027CharacteristicValueInfo\022"
      ".\n\016characteristic\030\001 \001(\0132\026.Characteristic"
      "Address\022\r\n\005value\030\002 \001(\014\022 \n\007failure\030\003 \001(\0132"
      "\017.GenericFailure\"[\n\032WriteCharacteristicR"
      "equest\022.\n\016characteristic\030\001 \001(\0132\026.Charact"
      "eristicAddress\022\r\n\005value\030\002 \001(\014\"k\n\027WriteCh"
      "aracteristicInfo\022.\n\016characteristic\030\001 \001(\013"
      "2\026.CharacteristicAddress\022 \n\007failure\030\003 \001("
      "\0132\017.GenericFailure\"8\n\023NegotiateMtuReques"
      "t\022\020\n\010deviceId\030\001 \001(\t\022\017\n\007mtuSize\030\002 \001(\005\"W\n\020"
      "NegotiateMtuInfo\022\020\n\010deviceId\030\001 \001(\t\022\017\n\007mt"
      "uSize\030\002 \001(\005\022 \n\007failure\030\003 \001(\0132\017.GenericFa"
      "ilure\"\037\n\rBleStatusInfo\022\016\n\006status\030\001 \001(\005\"E"
      "\n\037ChangeConnectionPriorityRequest\022\020\n\010dev"
      "iceId\030\001 \001(\t\022\020\n\010priority\030\002 \001(\005\"R\n\034ChangeC"
      "onnectionPriorityInfo\022\020\n\010deviceId\030\001 \001(\t\022"
      " \n\007failure\030\002 \001(\0132\017.GenericFailure\"h\n\025Cha"
      "racteristicAddress\022\020\n\010deviceId\030\001 \001(\t\022\032\n\013"
      "serviceUuid\030\002 \001(\0132\005.Uuid\022!\n\022characterist"
      "icUuid\030\003 \001(\0132\005.Uuid\"<\n\020ServiceDataEntry\022"
      "\032\n\013serviceUuid\030\001 \001(\0132\005.Uuid\022\014\n\004data\030\002 \001("
      "\014\"I\n\033ServicesWithCharacteristics\022*\n\005item"
      "s\030\001 \003(\0132\033.ServiceWithCharacteristics\"V\n\032"
      "ServiceWithCharacteristics\022\030\n\tserviceId\030"
      "\001 \001(\0132\005.Uuid\022\036\n\017characteristics\030\002 \003(\0132\005."
      "Uuid\"+\n\027DiscoverServicesRequest\022\020\n\010devic"
      "eId\030\001 \001(\t\"N\n\024DiscoverServicesInfo\022\020\n\010dev"
      "iceId\030\001 \001(\t\022$\n\010services\030\002 \003(\0132\022.Discover"
      "edService\"\265\001\n\021DiscoveredService\022\032\n\013servi"
      "ceUuid\030\001 \001(\0132\005.Uuid\022\"\n\023characteristicUui"
      "ds\030\002 \003(\0132\005.Uuid\022,\n\020includedServices\030\003 \003("
      "\0132\022.DiscoveredService\0222\n\017characteristics"
      "\030\004 \003(\0132\031.DiscoveredCharacteristic\"\331\001\n\030Di"
      "scoveredCharacteristic\022\037\n\020characteristic"
      "Id\030\001 \001(\0132\005.Uuid\022\030\n\tserviceId\030\002 \001(\0132\005.Uui"
      "d\022\022\n\nisReadable\030\003 \001(\010\022\036\n\026isWritableWithR"
      "esponse\030\004 \001(\010\022!\n\031isWritableWithoutRespon"
      "se\030\005 \001(\010\022\024\n\014isNotifiable\030\006 \001(\010\022\025\n\risIndi"
      "catable\030\007 \001(\010\"\024\n\004Uuid\022\014\n\004data\030\001 \001(\014\"/\n\016G"
      "enericFailure\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002"
      " \001(\tB3\n\"com.signify.hue.flutterreactiveb"
      "leB\rProtobufModelb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2585);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bledata.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bledata_2eproto

// ===================================================================

void ScanForDevicesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanForDevicesRequest::kServiceUuidsFieldNumber;
const int ScanForDevicesRequest::kScanModeFieldNumber;
const int ScanForDevicesRequest::kRequireLocationServicesEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanForDevicesRequest::ScanForDevicesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ScanForDevicesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScanForDevicesRequest)
}
ScanForDevicesRequest::ScanForDevicesRequest(const ScanForDevicesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      serviceuuids_(from.serviceuuids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scanmode_, &from.scanmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&requirelocationservicesenabled_) -
    reinterpret_cast<char*>(&scanmode_)) + sizeof(requirelocationservicesenabled_));
  // @@protoc_insertion_point(copy_constructor:ScanForDevicesRequest)
}

void ScanForDevicesRequest::SharedCtor() {
  ::memset(&scanmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requirelocationservicesenabled_) -
      reinterpret_cast<char*>(&scanmode_)) + sizeof(requirelocationservicesenabled_));
}

ScanForDevicesRequest::~ScanForDevicesRequest() {
  // @@protoc_insertion_point(destructor:ScanForDevicesRequest)
  SharedDtor();
}

void ScanForDevicesRequest::SharedDtor() {
}

void ScanForDevicesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanForDevicesRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanForDevicesRequest& ScanForDevicesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ScanForDevicesRequest.base);
  return *internal_default_instance();
}


void ScanForDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScanForDevicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serviceuuids_.Clear();
  ::memset(&scanmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requirelocationservicesenabled_) -
      reinterpret_cast<char*>(&scanmode_)) + sizeof(requirelocationservicesenabled_));
  _internal_metadata_.Clear();
}

bool ScanForDevicesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScanForDevicesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Uuid serviceUuids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_serviceuuids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 scanMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scanmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool requireLocationServicesEnabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &requirelocationservicesenabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScanForDevicesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScanForDevicesRequest)
  return false;
#undef DO_
}

void ScanForDevicesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScanForDevicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Uuid serviceUuids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serviceuuids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->serviceuuids(static_cast<int>(i)),
      output);
  }

  // int32 scanMode = 2;
  if (this->scanmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scanmode(), output);
  }

  // bool requireLocationServicesEnabled = 3;
  if (this->requirelocationservicesenabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->requirelocationservicesenabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScanForDevicesRequest)
}

::google::protobuf::uint8* ScanForDevicesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScanForDevicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Uuid serviceUuids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serviceuuids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->serviceuuids(static_cast<int>(i)), deterministic, target);
  }

  // int32 scanMode = 2;
  if (this->scanmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scanmode(), target);
  }

  // bool requireLocationServicesEnabled = 3;
  if (this->requirelocationservicesenabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->requirelocationservicesenabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScanForDevicesRequest)
  return target;
}

size_t ScanForDevicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScanForDevicesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Uuid serviceUuids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->serviceuuids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->serviceuuids(static_cast<int>(i)));
    }
  }

  // int32 scanMode = 2;
  if (this->scanmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scanmode());
  }

  // bool requireLocationServicesEnabled = 3;
  if (this->requirelocationservicesenabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanForDevicesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScanForDevicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanForDevicesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanForDevicesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScanForDevicesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScanForDevicesRequest)
    MergeFrom(*source);
  }
}

void ScanForDevicesRequest::MergeFrom(const ScanForDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScanForDevicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  serviceuuids_.MergeFrom(from.serviceuuids_);
  if (from.scanmode() != 0) {
    set_scanmode(from.scanmode());
  }
  if (from.requirelocationservicesenabled() != 0) {
    set_requirelocationservicesenabled(from.requirelocationservicesenabled());
  }
}

void ScanForDevicesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScanForDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanForDevicesRequest::CopyFrom(const ScanForDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScanForDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanForDevicesRequest::IsInitialized() const {
  return true;
}

void ScanForDevicesRequest::Swap(ScanForDevicesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanForDevicesRequest::InternalSwap(ScanForDevicesRequest* other) {
  using std::swap;
  CastToBase(&serviceuuids_)->InternalSwap(CastToBase(&other->serviceuuids_));
  swap(scanmode_, other->scanmode_);
  swap(requirelocationservicesenabled_, other->requirelocationservicesenabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanForDevicesRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceScanInfo::InitAsDefaultInstance() {
  ::_DeviceScanInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceScanInfo::kIdFieldNumber;
const int DeviceScanInfo::kNameFieldNumber;
const int DeviceScanInfo::kFailureFieldNumber;
const int DeviceScanInfo::kServiceDataFieldNumber;
const int DeviceScanInfo::kManufacturerDataFieldNumber;
const int DeviceScanInfo::kServiceUuidsFieldNumber;
const int DeviceScanInfo::kRssiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceScanInfo::DeviceScanInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DeviceScanInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceScanInfo)
}
DeviceScanInfo::DeviceScanInfo(const DeviceScanInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      servicedata_(from.servicedata_),
      serviceuuids_(from.serviceuuids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  manufacturerdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manufacturerdata().size() > 0) {
    manufacturerdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerdata_);
  }
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  rssi_ = from.rssi_;
  // @@protoc_insertion_point(copy_constructor:DeviceScanInfo)
}

void DeviceScanInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&failure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rssi_) -
      reinterpret_cast<char*>(&failure_)) + sizeof(rssi_));
}

DeviceScanInfo::~DeviceScanInfo() {
  // @@protoc_insertion_point(destructor:DeviceScanInfo)
  SharedDtor();
}

void DeviceScanInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete failure_;
}

void DeviceScanInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceScanInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceScanInfo& DeviceScanInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DeviceScanInfo.base);
  return *internal_default_instance();
}


void DeviceScanInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceScanInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicedata_.Clear();
  serviceuuids_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  rssi_ = 0;
  _internal_metadata_.Clear();
}

bool DeviceScanInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceScanInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeviceScanInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeviceScanInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GenericFailure failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ServiceDataEntry serviceData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_servicedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rssi = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rssi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes manufacturerData = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manufacturerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Uuid serviceUuids = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_serviceuuids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceScanInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceScanInfo)
  return false;
#undef DO_
}

void DeviceScanInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceScanInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceScanInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceScanInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_failure(), output);
  }

  // repeated .ServiceDataEntry serviceData = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servicedata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->servicedata(static_cast<int>(i)),
      output);
  }

  // int32 rssi = 5;
  if (this->rssi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rssi(), output);
  }

  // bytes manufacturerData = 6;
  if (this->manufacturerdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->manufacturerdata(), output);
  }

  // repeated .Uuid serviceUuids = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serviceuuids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->serviceuuids(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceScanInfo)
}

::google::protobuf::uint8* DeviceScanInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceScanInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceScanInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceScanInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_failure(), deterministic, target);
  }

  // repeated .ServiceDataEntry serviceData = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servicedata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->servicedata(static_cast<int>(i)), deterministic, target);
  }

  // int32 rssi = 5;
  if (this->rssi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rssi(), target);
  }

  // bytes manufacturerData = 6;
  if (this->manufacturerdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->manufacturerdata(), target);
  }

  // repeated .Uuid serviceUuids = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serviceuuids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->serviceuuids(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceScanInfo)
  return target;
}

size_t DeviceScanInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceScanInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServiceDataEntry serviceData = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->servicedata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servicedata(static_cast<int>(i)));
    }
  }

  // repeated .Uuid serviceUuids = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->serviceuuids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->serviceuuids(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes manufacturerData = 6;
  if (this->manufacturerdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerdata());
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  // int32 rssi = 5;
  if (this->rssi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rssi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceScanInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceScanInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceScanInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceScanInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceScanInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceScanInfo)
    MergeFrom(*source);
  }
}

void DeviceScanInfo::MergeFrom(const DeviceScanInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceScanInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servicedata_.MergeFrom(from.servicedata_);
  serviceuuids_.MergeFrom(from.serviceuuids_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.manufacturerdata().size() > 0) {

    manufacturerdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerdata_);
  }
  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
  if (from.rssi() != 0) {
    set_rssi(from.rssi());
  }
}

void DeviceScanInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceScanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceScanInfo::CopyFrom(const DeviceScanInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceScanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceScanInfo::IsInitialized() const {
  return true;
}

void DeviceScanInfo::Swap(DeviceScanInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceScanInfo::InternalSwap(DeviceScanInfo* other) {
  using std::swap;
  CastToBase(&servicedata_)->InternalSwap(CastToBase(&other->servicedata_));
  CastToBase(&serviceuuids_)->InternalSwap(CastToBase(&other->serviceuuids_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manufacturerdata_.Swap(&other->manufacturerdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(failure_, other->failure_);
  swap(rssi_, other->rssi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceScanInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectToDeviceRequest::InitAsDefaultInstance() {
  ::_ConnectToDeviceRequest_default_instance_._instance.get_mutable()->serviceswithcharacteristicstodiscover_ = const_cast< ::ServicesWithCharacteristics*>(
      ::ServicesWithCharacteristics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectToDeviceRequest::kDeviceIdFieldNumber;
const int ConnectToDeviceRequest::kServicesWithCharacteristicsToDiscoverFieldNumber;
const int ConnectToDeviceRequest::kTimeoutInMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectToDeviceRequest::ConnectToDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ConnectToDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectToDeviceRequest)
}
ConnectToDeviceRequest::ConnectToDeviceRequest(const ConnectToDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_serviceswithcharacteristicstodiscover()) {
    serviceswithcharacteristicstodiscover_ = new ::ServicesWithCharacteristics(*from.serviceswithcharacteristicstodiscover_);
  } else {
    serviceswithcharacteristicstodiscover_ = NULL;
  }
  timeoutinms_ = from.timeoutinms_;
  // @@protoc_insertion_point(copy_constructor:ConnectToDeviceRequest)
}

void ConnectToDeviceRequest::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serviceswithcharacteristicstodiscover_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeoutinms_) -
      reinterpret_cast<char*>(&serviceswithcharacteristicstodiscover_)) + sizeof(timeoutinms_));
}

ConnectToDeviceRequest::~ConnectToDeviceRequest() {
  // @@protoc_insertion_point(destructor:ConnectToDeviceRequest)
  SharedDtor();
}

void ConnectToDeviceRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serviceswithcharacteristicstodiscover_;
}

void ConnectToDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectToDeviceRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectToDeviceRequest& ConnectToDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ConnectToDeviceRequest.base);
  return *internal_default_instance();
}


void ConnectToDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serviceswithcharacteristicstodiscover_ != NULL) {
    delete serviceswithcharacteristicstodiscover_;
  }
  serviceswithcharacteristicstodiscover_ = NULL;
  timeoutinms_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectToDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectToDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConnectToDeviceRequest.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServicesWithCharacteristics servicesWithCharacteristicsToDiscover = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serviceswithcharacteristicstodiscover()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeoutInMs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeoutinms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectToDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectToDeviceRequest)
  return false;
#undef DO_
}

void ConnectToDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectToDeviceRequest.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // .ServicesWithCharacteristics servicesWithCharacteristicsToDiscover = 2;
  if (this->has_serviceswithcharacteristicstodiscover()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_serviceswithcharacteristicstodiscover(), output);
  }

  // int32 timeoutInMs = 3;
  if (this->timeoutinms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeoutinms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectToDeviceRequest)
}

::google::protobuf::uint8* ConnectToDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectToDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectToDeviceRequest.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // .ServicesWithCharacteristics servicesWithCharacteristicsToDiscover = 2;
  if (this->has_serviceswithcharacteristicstodiscover()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_serviceswithcharacteristicstodiscover(), deterministic, target);
  }

  // int32 timeoutInMs = 3;
  if (this->timeoutinms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeoutinms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectToDeviceRequest)
  return target;
}

size_t ConnectToDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectToDeviceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // .ServicesWithCharacteristics servicesWithCharacteristicsToDiscover = 2;
  if (this->has_serviceswithcharacteristicstodiscover()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serviceswithcharacteristicstodiscover_);
  }

  // int32 timeoutInMs = 3;
  if (this->timeoutinms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeoutinms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectToDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectToDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectToDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectToDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectToDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectToDeviceRequest)
    MergeFrom(*source);
  }
}

void ConnectToDeviceRequest::MergeFrom(const ConnectToDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectToDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_serviceswithcharacteristicstodiscover()) {
    mutable_serviceswithcharacteristicstodiscover()->::ServicesWithCharacteristics::MergeFrom(from.serviceswithcharacteristicstodiscover());
  }
  if (from.timeoutinms() != 0) {
    set_timeoutinms(from.timeoutinms());
  }
}

void ConnectToDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectToDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectToDeviceRequest::CopyFrom(const ConnectToDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectToDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectToDeviceRequest::IsInitialized() const {
  return true;
}

void ConnectToDeviceRequest::Swap(ConnectToDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectToDeviceRequest::InternalSwap(ConnectToDeviceRequest* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serviceswithcharacteristicstodiscover_, other->serviceswithcharacteristicstodiscover_);
  swap(timeoutinms_, other->timeoutinms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectToDeviceRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceInfo::InitAsDefaultInstance() {
  ::_DeviceInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInfo::kIdFieldNumber;
const int DeviceInfo::kConnectionStateFieldNumber;
const int DeviceInfo::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInfo::DeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DeviceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInfo)
}
DeviceInfo::DeviceInfo(const DeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  connectionstate_ = from.connectionstate_;
  // @@protoc_insertion_point(copy_constructor:DeviceInfo)
}

void DeviceInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&failure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connectionstate_) -
      reinterpret_cast<char*>(&failure_)) + sizeof(connectionstate_));
}

DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:DeviceInfo)
  SharedDtor();
}

void DeviceInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete failure_;
}

void DeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceInfo& DeviceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DeviceInfo.base);
  return *internal_default_instance();
}


void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  connectionstate_ = 0;
  _internal_metadata_.Clear();
}

bool DeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeviceInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 connectionState = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connectionstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GenericFailure failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInfo)
  return false;
#undef DO_
}

void DeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // int32 connectionState = 2;
  if (this->connectionstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->connectionstate(), output);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceInfo)
}

::google::protobuf::uint8* DeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeviceInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // int32 connectionState = 2;
  if (this->connectionstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->connectionstate(), target);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceInfo)
  return target;
}

size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  // int32 connectionState = 2;
  if (this->connectionstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connectionstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInfo)
    MergeFrom(*source);
  }
}

void DeviceInfo::MergeFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
  if (from.connectionstate() != 0) {
    set_connectionstate(from.connectionstate());
  }
}

void DeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInfo::IsInitialized() const {
  return true;
}

void DeviceInfo::Swap(DeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInfo::InternalSwap(DeviceInfo* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(failure_, other->failure_);
  swap(connectionstate_, other->connectionstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisconnectFromDeviceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisconnectFromDeviceRequest::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisconnectFromDeviceRequest::DisconnectFromDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DisconnectFromDeviceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DisconnectFromDeviceRequest)
}
DisconnectFromDeviceRequest::DisconnectFromDeviceRequest(const DisconnectFromDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:DisconnectFromDeviceRequest)
}

void DisconnectFromDeviceRequest::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DisconnectFromDeviceRequest::~DisconnectFromDeviceRequest() {
  // @@protoc_insertion_point(destructor:DisconnectFromDeviceRequest)
  SharedDtor();
}

void DisconnectFromDeviceRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DisconnectFromDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisconnectFromDeviceRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisconnectFromDeviceRequest& DisconnectFromDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DisconnectFromDeviceRequest.base);
  return *internal_default_instance();
}


void DisconnectFromDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DisconnectFromDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DisconnectFromDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DisconnectFromDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DisconnectFromDeviceRequest.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DisconnectFromDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DisconnectFromDeviceRequest)
  return false;
#undef DO_
}

void DisconnectFromDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DisconnectFromDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DisconnectFromDeviceRequest.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DisconnectFromDeviceRequest)
}

::google::protobuf::uint8* DisconnectFromDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DisconnectFromDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DisconnectFromDeviceRequest.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DisconnectFromDeviceRequest)
  return target;
}

size_t DisconnectFromDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DisconnectFromDeviceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisconnectFromDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DisconnectFromDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectFromDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisconnectFromDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DisconnectFromDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DisconnectFromDeviceRequest)
    MergeFrom(*source);
  }
}

void DisconnectFromDeviceRequest::MergeFrom(const DisconnectFromDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DisconnectFromDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
}

void DisconnectFromDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DisconnectFromDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectFromDeviceRequest::CopyFrom(const DisconnectFromDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DisconnectFromDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectFromDeviceRequest::IsInitialized() const {
  return true;
}

void DisconnectFromDeviceRequest::Swap(DisconnectFromDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisconnectFromDeviceRequest::InternalSwap(DisconnectFromDeviceRequest* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisconnectFromDeviceRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearGattCacheRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearGattCacheRequest::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearGattCacheRequest::ClearGattCacheRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ClearGattCacheRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClearGattCacheRequest)
}
ClearGattCacheRequest::ClearGattCacheRequest(const ClearGattCacheRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:ClearGattCacheRequest)
}

void ClearGattCacheRequest::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClearGattCacheRequest::~ClearGattCacheRequest() {
  // @@protoc_insertion_point(destructor:ClearGattCacheRequest)
  SharedDtor();
}

void ClearGattCacheRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClearGattCacheRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClearGattCacheRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearGattCacheRequest& ClearGattCacheRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ClearGattCacheRequest.base);
  return *internal_default_instance();
}


void ClearGattCacheRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClearGattCacheRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClearGattCacheRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClearGattCacheRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClearGattCacheRequest.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClearGattCacheRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClearGattCacheRequest)
  return false;
#undef DO_
}

void ClearGattCacheRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClearGattCacheRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClearGattCacheRequest.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClearGattCacheRequest)
}

::google::protobuf::uint8* ClearGattCacheRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClearGattCacheRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClearGattCacheRequest.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClearGattCacheRequest)
  return target;
}

size_t ClearGattCacheRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClearGattCacheRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearGattCacheRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClearGattCacheRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearGattCacheRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearGattCacheRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClearGattCacheRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClearGattCacheRequest)
    MergeFrom(*source);
  }
}

void ClearGattCacheRequest::MergeFrom(const ClearGattCacheRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClearGattCacheRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
}

void ClearGattCacheRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClearGattCacheRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearGattCacheRequest::CopyFrom(const ClearGattCacheRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClearGattCacheRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearGattCacheRequest::IsInitialized() const {
  return true;
}

void ClearGattCacheRequest::Swap(ClearGattCacheRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearGattCacheRequest::InternalSwap(ClearGattCacheRequest* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClearGattCacheRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearGattCacheInfo::InitAsDefaultInstance() {
  ::_ClearGattCacheInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearGattCacheInfo::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearGattCacheInfo::ClearGattCacheInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ClearGattCacheInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClearGattCacheInfo)
}
ClearGattCacheInfo::ClearGattCacheInfo(const ClearGattCacheInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ClearGattCacheInfo)
}

void ClearGattCacheInfo::SharedCtor() {
  failure_ = NULL;
}

ClearGattCacheInfo::~ClearGattCacheInfo() {
  // @@protoc_insertion_point(destructor:ClearGattCacheInfo)
  SharedDtor();
}

void ClearGattCacheInfo::SharedDtor() {
  if (this != internal_default_instance()) delete failure_;
}

void ClearGattCacheInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClearGattCacheInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearGattCacheInfo& ClearGattCacheInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ClearGattCacheInfo.base);
  return *internal_default_instance();
}


void ClearGattCacheInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClearGattCacheInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  _internal_metadata_.Clear();
}

bool ClearGattCacheInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClearGattCacheInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GenericFailure failure = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClearGattCacheInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClearGattCacheInfo)
  return false;
#undef DO_
}

void ClearGattCacheInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClearGattCacheInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GenericFailure failure = 1;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClearGattCacheInfo)
}

::google::protobuf::uint8* ClearGattCacheInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClearGattCacheInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GenericFailure failure = 1;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClearGattCacheInfo)
  return target;
}

size_t ClearGattCacheInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClearGattCacheInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GenericFailure failure = 1;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearGattCacheInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClearGattCacheInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearGattCacheInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearGattCacheInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClearGattCacheInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClearGattCacheInfo)
    MergeFrom(*source);
  }
}

void ClearGattCacheInfo::MergeFrom(const ClearGattCacheInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClearGattCacheInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
}

void ClearGattCacheInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClearGattCacheInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearGattCacheInfo::CopyFrom(const ClearGattCacheInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClearGattCacheInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearGattCacheInfo::IsInitialized() const {
  return true;
}

void ClearGattCacheInfo::Swap(ClearGattCacheInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearGattCacheInfo::InternalSwap(ClearGattCacheInfo* other) {
  using std::swap;
  swap(failure_, other->failure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClearGattCacheInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyCharacteristicRequest::InitAsDefaultInstance() {
  ::_NotifyCharacteristicRequest_default_instance_._instance.get_mutable()->characteristic_ = const_cast< ::CharacteristicAddress*>(
      ::CharacteristicAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyCharacteristicRequest::kCharacteristicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyCharacteristicRequest::NotifyCharacteristicRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_NotifyCharacteristicRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyCharacteristicRequest)
}
NotifyCharacteristicRequest::NotifyCharacteristicRequest(const NotifyCharacteristicRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_characteristic()) {
    characteristic_ = new ::CharacteristicAddress(*from.characteristic_);
  } else {
    characteristic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NotifyCharacteristicRequest)
}

void NotifyCharacteristicRequest::SharedCtor() {
  characteristic_ = NULL;
}

NotifyCharacteristicRequest::~NotifyCharacteristicRequest() {
  // @@protoc_insertion_point(destructor:NotifyCharacteristicRequest)
  SharedDtor();
}

void NotifyCharacteristicRequest::SharedDtor() {
  if (this != internal_default_instance()) delete characteristic_;
}

void NotifyCharacteristicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyCharacteristicRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyCharacteristicRequest& NotifyCharacteristicRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_NotifyCharacteristicRequest.base);
  return *internal_default_instance();
}


void NotifyCharacteristicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && characteristic_ != NULL) {
    delete characteristic_;
  }
  characteristic_ = NULL;
  _internal_metadata_.Clear();
}

bool NotifyCharacteristicRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyCharacteristicRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CharacteristicAddress characteristic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyCharacteristicRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyCharacteristicRequest)
  return false;
#undef DO_
}

void NotifyCharacteristicRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristic(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NotifyCharacteristicRequest)
}

::google::protobuf::uint8* NotifyCharacteristicRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NotifyCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristic(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyCharacteristicRequest)
  return target;
}

size_t NotifyCharacteristicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyCharacteristicRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristic_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyCharacteristicRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyCharacteristicRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyCharacteristicRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyCharacteristicRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyCharacteristicRequest)
    MergeFrom(*source);
  }
}

void NotifyCharacteristicRequest::MergeFrom(const NotifyCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_characteristic()) {
    mutable_characteristic()->::CharacteristicAddress::MergeFrom(from.characteristic());
  }
}

void NotifyCharacteristicRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyCharacteristicRequest::CopyFrom(const NotifyCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyCharacteristicRequest::IsInitialized() const {
  return true;
}

void NotifyCharacteristicRequest::Swap(NotifyCharacteristicRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyCharacteristicRequest::InternalSwap(NotifyCharacteristicRequest* other) {
  using std::swap;
  swap(characteristic_, other->characteristic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyCharacteristicRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyNoMoreCharacteristicRequest::InitAsDefaultInstance() {
  ::_NotifyNoMoreCharacteristicRequest_default_instance_._instance.get_mutable()->characteristic_ = const_cast< ::CharacteristicAddress*>(
      ::CharacteristicAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyNoMoreCharacteristicRequest::kCharacteristicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyNoMoreCharacteristicRequest::NotifyNoMoreCharacteristicRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_NotifyNoMoreCharacteristicRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyNoMoreCharacteristicRequest)
}
NotifyNoMoreCharacteristicRequest::NotifyNoMoreCharacteristicRequest(const NotifyNoMoreCharacteristicRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_characteristic()) {
    characteristic_ = new ::CharacteristicAddress(*from.characteristic_);
  } else {
    characteristic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NotifyNoMoreCharacteristicRequest)
}

void NotifyNoMoreCharacteristicRequest::SharedCtor() {
  characteristic_ = NULL;
}

NotifyNoMoreCharacteristicRequest::~NotifyNoMoreCharacteristicRequest() {
  // @@protoc_insertion_point(destructor:NotifyNoMoreCharacteristicRequest)
  SharedDtor();
}

void NotifyNoMoreCharacteristicRequest::SharedDtor() {
  if (this != internal_default_instance()) delete characteristic_;
}

void NotifyNoMoreCharacteristicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyNoMoreCharacteristicRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyNoMoreCharacteristicRequest& NotifyNoMoreCharacteristicRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_NotifyNoMoreCharacteristicRequest.base);
  return *internal_default_instance();
}


void NotifyNoMoreCharacteristicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyNoMoreCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && characteristic_ != NULL) {
    delete characteristic_;
  }
  characteristic_ = NULL;
  _internal_metadata_.Clear();
}

bool NotifyNoMoreCharacteristicRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyNoMoreCharacteristicRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CharacteristicAddress characteristic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyNoMoreCharacteristicRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyNoMoreCharacteristicRequest)
  return false;
#undef DO_
}

void NotifyNoMoreCharacteristicRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyNoMoreCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristic(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NotifyNoMoreCharacteristicRequest)
}

::google::protobuf::uint8* NotifyNoMoreCharacteristicRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NotifyNoMoreCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristic(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyNoMoreCharacteristicRequest)
  return target;
}

size_t NotifyNoMoreCharacteristicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyNoMoreCharacteristicRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristic_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyNoMoreCharacteristicRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyNoMoreCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyNoMoreCharacteristicRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyNoMoreCharacteristicRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyNoMoreCharacteristicRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyNoMoreCharacteristicRequest)
    MergeFrom(*source);
  }
}

void NotifyNoMoreCharacteristicRequest::MergeFrom(const NotifyNoMoreCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyNoMoreCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_characteristic()) {
    mutable_characteristic()->::CharacteristicAddress::MergeFrom(from.characteristic());
  }
}

void NotifyNoMoreCharacteristicRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyNoMoreCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyNoMoreCharacteristicRequest::CopyFrom(const NotifyNoMoreCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyNoMoreCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyNoMoreCharacteristicRequest::IsInitialized() const {
  return true;
}

void NotifyNoMoreCharacteristicRequest::Swap(NotifyNoMoreCharacteristicRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyNoMoreCharacteristicRequest::InternalSwap(NotifyNoMoreCharacteristicRequest* other) {
  using std::swap;
  swap(characteristic_, other->characteristic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyNoMoreCharacteristicRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadCharacteristicRequest::InitAsDefaultInstance() {
  ::_ReadCharacteristicRequest_default_instance_._instance.get_mutable()->characteristic_ = const_cast< ::CharacteristicAddress*>(
      ::CharacteristicAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadCharacteristicRequest::kCharacteristicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadCharacteristicRequest::ReadCharacteristicRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ReadCharacteristicRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReadCharacteristicRequest)
}
ReadCharacteristicRequest::ReadCharacteristicRequest(const ReadCharacteristicRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_characteristic()) {
    characteristic_ = new ::CharacteristicAddress(*from.characteristic_);
  } else {
    characteristic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ReadCharacteristicRequest)
}

void ReadCharacteristicRequest::SharedCtor() {
  characteristic_ = NULL;
}

ReadCharacteristicRequest::~ReadCharacteristicRequest() {
  // @@protoc_insertion_point(destructor:ReadCharacteristicRequest)
  SharedDtor();
}

void ReadCharacteristicRequest::SharedDtor() {
  if (this != internal_default_instance()) delete characteristic_;
}

void ReadCharacteristicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadCharacteristicRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadCharacteristicRequest& ReadCharacteristicRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ReadCharacteristicRequest.base);
  return *internal_default_instance();
}


void ReadCharacteristicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ReadCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && characteristic_ != NULL) {
    delete characteristic_;
  }
  characteristic_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadCharacteristicRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReadCharacteristicRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CharacteristicAddress characteristic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReadCharacteristicRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReadCharacteristicRequest)
  return false;
#undef DO_
}

void ReadCharacteristicRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReadCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristic(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReadCharacteristicRequest)
}

::google::protobuf::uint8* ReadCharacteristicRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReadCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristic(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReadCharacteristicRequest)
  return target;
}

size_t ReadCharacteristicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReadCharacteristicRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristic_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadCharacteristicRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReadCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadCharacteristicRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadCharacteristicRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReadCharacteristicRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReadCharacteristicRequest)
    MergeFrom(*source);
  }
}

void ReadCharacteristicRequest::MergeFrom(const ReadCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReadCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_characteristic()) {
    mutable_characteristic()->::CharacteristicAddress::MergeFrom(from.characteristic());
  }
}

void ReadCharacteristicRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReadCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadCharacteristicRequest::CopyFrom(const ReadCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReadCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadCharacteristicRequest::IsInitialized() const {
  return true;
}

void ReadCharacteristicRequest::Swap(ReadCharacteristicRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadCharacteristicRequest::InternalSwap(ReadCharacteristicRequest* other) {
  using std::swap;
  swap(characteristic_, other->characteristic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadCharacteristicRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CharacteristicValueInfo::InitAsDefaultInstance() {
  ::_CharacteristicValueInfo_default_instance_._instance.get_mutable()->characteristic_ = const_cast< ::CharacteristicAddress*>(
      ::CharacteristicAddress::internal_default_instance());
  ::_CharacteristicValueInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacteristicValueInfo::kCharacteristicFieldNumber;
const int CharacteristicValueInfo::kValueFieldNumber;
const int CharacteristicValueInfo::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacteristicValueInfo::CharacteristicValueInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_CharacteristicValueInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CharacteristicValueInfo)
}
CharacteristicValueInfo::CharacteristicValueInfo(const CharacteristicValueInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_characteristic()) {
    characteristic_ = new ::CharacteristicAddress(*from.characteristic_);
  } else {
    characteristic_ = NULL;
  }
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CharacteristicValueInfo)
}

void CharacteristicValueInfo::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&characteristic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&failure_) -
      reinterpret_cast<char*>(&characteristic_)) + sizeof(failure_));
}

CharacteristicValueInfo::~CharacteristicValueInfo() {
  // @@protoc_insertion_point(destructor:CharacteristicValueInfo)
  SharedDtor();
}

void CharacteristicValueInfo::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete characteristic_;
  if (this != internal_default_instance()) delete failure_;
}

void CharacteristicValueInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CharacteristicValueInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CharacteristicValueInfo& CharacteristicValueInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_CharacteristicValueInfo.base);
  return *internal_default_instance();
}


void CharacteristicValueInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CharacteristicValueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && characteristic_ != NULL) {
    delete characteristic_;
  }
  characteristic_ = NULL;
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  _internal_metadata_.Clear();
}

bool CharacteristicValueInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CharacteristicValueInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CharacteristicAddress characteristic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GenericFailure failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CharacteristicValueInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CharacteristicValueInfo)
  return false;
#undef DO_
}

void CharacteristicValueInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CharacteristicValueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristic(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CharacteristicValueInfo)
}

::google::protobuf::uint8* CharacteristicValueInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CharacteristicValueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristic(), deterministic, target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharacteristicValueInfo)
  return target;
}

size_t CharacteristicValueInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharacteristicValueInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristic_);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacteristicValueInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CharacteristicValueInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacteristicValueInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacteristicValueInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CharacteristicValueInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CharacteristicValueInfo)
    MergeFrom(*source);
  }
}

void CharacteristicValueInfo::MergeFrom(const CharacteristicValueInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CharacteristicValueInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_characteristic()) {
    mutable_characteristic()->::CharacteristicAddress::MergeFrom(from.characteristic());
  }
  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
}

void CharacteristicValueInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CharacteristicValueInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacteristicValueInfo::CopyFrom(const CharacteristicValueInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharacteristicValueInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacteristicValueInfo::IsInitialized() const {
  return true;
}

void CharacteristicValueInfo::Swap(CharacteristicValueInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacteristicValueInfo::InternalSwap(CharacteristicValueInfo* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(characteristic_, other->characteristic_);
  swap(failure_, other->failure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CharacteristicValueInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteCharacteristicRequest::InitAsDefaultInstance() {
  ::_WriteCharacteristicRequest_default_instance_._instance.get_mutable()->characteristic_ = const_cast< ::CharacteristicAddress*>(
      ::CharacteristicAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteCharacteristicRequest::kCharacteristicFieldNumber;
const int WriteCharacteristicRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteCharacteristicRequest::WriteCharacteristicRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_WriteCharacteristicRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:WriteCharacteristicRequest)
}
WriteCharacteristicRequest::WriteCharacteristicRequest(const WriteCharacteristicRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_characteristic()) {
    characteristic_ = new ::CharacteristicAddress(*from.characteristic_);
  } else {
    characteristic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:WriteCharacteristicRequest)
}

void WriteCharacteristicRequest::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  characteristic_ = NULL;
}

WriteCharacteristicRequest::~WriteCharacteristicRequest() {
  // @@protoc_insertion_point(destructor:WriteCharacteristicRequest)
  SharedDtor();
}

void WriteCharacteristicRequest::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete characteristic_;
}

void WriteCharacteristicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteCharacteristicRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteCharacteristicRequest& WriteCharacteristicRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_WriteCharacteristicRequest.base);
  return *internal_default_instance();
}


void WriteCharacteristicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WriteCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && characteristic_ != NULL) {
    delete characteristic_;
  }
  characteristic_ = NULL;
  _internal_metadata_.Clear();
}

bool WriteCharacteristicRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WriteCharacteristicRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CharacteristicAddress characteristic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WriteCharacteristicRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WriteCharacteristicRequest)
  return false;
#undef DO_
}

void WriteCharacteristicRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WriteCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristic(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WriteCharacteristicRequest)
}

::google::protobuf::uint8* WriteCharacteristicRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WriteCharacteristicRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristic(), deterministic, target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WriteCharacteristicRequest)
  return target;
}

size_t WriteCharacteristicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WriteCharacteristicRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristic_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteCharacteristicRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WriteCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteCharacteristicRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteCharacteristicRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WriteCharacteristicRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WriteCharacteristicRequest)
    MergeFrom(*source);
  }
}

void WriteCharacteristicRequest::MergeFrom(const WriteCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WriteCharacteristicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_characteristic()) {
    mutable_characteristic()->::CharacteristicAddress::MergeFrom(from.characteristic());
  }
}

void WriteCharacteristicRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WriteCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteCharacteristicRequest::CopyFrom(const WriteCharacteristicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WriteCharacteristicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteCharacteristicRequest::IsInitialized() const {
  return true;
}

void WriteCharacteristicRequest::Swap(WriteCharacteristicRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteCharacteristicRequest::InternalSwap(WriteCharacteristicRequest* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(characteristic_, other->characteristic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteCharacteristicRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteCharacteristicInfo::InitAsDefaultInstance() {
  ::_WriteCharacteristicInfo_default_instance_._instance.get_mutable()->characteristic_ = const_cast< ::CharacteristicAddress*>(
      ::CharacteristicAddress::internal_default_instance());
  ::_WriteCharacteristicInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteCharacteristicInfo::kCharacteristicFieldNumber;
const int WriteCharacteristicInfo::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteCharacteristicInfo::WriteCharacteristicInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_WriteCharacteristicInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:WriteCharacteristicInfo)
}
WriteCharacteristicInfo::WriteCharacteristicInfo(const WriteCharacteristicInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_characteristic()) {
    characteristic_ = new ::CharacteristicAddress(*from.characteristic_);
  } else {
    characteristic_ = NULL;
  }
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:WriteCharacteristicInfo)
}

void WriteCharacteristicInfo::SharedCtor() {
  ::memset(&characteristic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&failure_) -
      reinterpret_cast<char*>(&characteristic_)) + sizeof(failure_));
}

WriteCharacteristicInfo::~WriteCharacteristicInfo() {
  // @@protoc_insertion_point(destructor:WriteCharacteristicInfo)
  SharedDtor();
}

void WriteCharacteristicInfo::SharedDtor() {
  if (this != internal_default_instance()) delete characteristic_;
  if (this != internal_default_instance()) delete failure_;
}

void WriteCharacteristicInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteCharacteristicInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteCharacteristicInfo& WriteCharacteristicInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_WriteCharacteristicInfo.base);
  return *internal_default_instance();
}


void WriteCharacteristicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:WriteCharacteristicInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && characteristic_ != NULL) {
    delete characteristic_;
  }
  characteristic_ = NULL;
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  _internal_metadata_.Clear();
}

bool WriteCharacteristicInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WriteCharacteristicInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CharacteristicAddress characteristic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GenericFailure failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WriteCharacteristicInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WriteCharacteristicInfo)
  return false;
#undef DO_
}

void WriteCharacteristicInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WriteCharacteristicInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristic(), output);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WriteCharacteristicInfo)
}

::google::protobuf::uint8* WriteCharacteristicInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WriteCharacteristicInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristic(), deterministic, target);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WriteCharacteristicInfo)
  return target;
}

size_t WriteCharacteristicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WriteCharacteristicInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CharacteristicAddress characteristic = 1;
  if (this->has_characteristic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristic_);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteCharacteristicInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WriteCharacteristicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteCharacteristicInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteCharacteristicInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WriteCharacteristicInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WriteCharacteristicInfo)
    MergeFrom(*source);
  }
}

void WriteCharacteristicInfo::MergeFrom(const WriteCharacteristicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WriteCharacteristicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_characteristic()) {
    mutable_characteristic()->::CharacteristicAddress::MergeFrom(from.characteristic());
  }
  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
}

void WriteCharacteristicInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WriteCharacteristicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteCharacteristicInfo::CopyFrom(const WriteCharacteristicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WriteCharacteristicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteCharacteristicInfo::IsInitialized() const {
  return true;
}

void WriteCharacteristicInfo::Swap(WriteCharacteristicInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteCharacteristicInfo::InternalSwap(WriteCharacteristicInfo* other) {
  using std::swap;
  swap(characteristic_, other->characteristic_);
  swap(failure_, other->failure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteCharacteristicInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NegotiateMtuRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NegotiateMtuRequest::kDeviceIdFieldNumber;
const int NegotiateMtuRequest::kMtuSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NegotiateMtuRequest::NegotiateMtuRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_NegotiateMtuRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NegotiateMtuRequest)
}
NegotiateMtuRequest::NegotiateMtuRequest(const NegotiateMtuRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  mtusize_ = from.mtusize_;
  // @@protoc_insertion_point(copy_constructor:NegotiateMtuRequest)
}

void NegotiateMtuRequest::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mtusize_ = 0;
}

NegotiateMtuRequest::~NegotiateMtuRequest() {
  // @@protoc_insertion_point(destructor:NegotiateMtuRequest)
  SharedDtor();
}

void NegotiateMtuRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NegotiateMtuRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NegotiateMtuRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NegotiateMtuRequest& NegotiateMtuRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_NegotiateMtuRequest.base);
  return *internal_default_instance();
}


void NegotiateMtuRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NegotiateMtuRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mtusize_ = 0;
  _internal_metadata_.Clear();
}

bool NegotiateMtuRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NegotiateMtuRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NegotiateMtuRequest.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtuSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtusize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NegotiateMtuRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NegotiateMtuRequest)
  return false;
#undef DO_
}

void NegotiateMtuRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NegotiateMtuRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NegotiateMtuRequest.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // int32 mtuSize = 2;
  if (this->mtusize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mtusize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NegotiateMtuRequest)
}

::google::protobuf::uint8* NegotiateMtuRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NegotiateMtuRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NegotiateMtuRequest.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // int32 mtuSize = 2;
  if (this->mtusize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mtusize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NegotiateMtuRequest)
  return target;
}

size_t NegotiateMtuRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NegotiateMtuRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // int32 mtuSize = 2;
  if (this->mtusize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtusize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NegotiateMtuRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NegotiateMtuRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NegotiateMtuRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NegotiateMtuRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NegotiateMtuRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NegotiateMtuRequest)
    MergeFrom(*source);
  }
}

void NegotiateMtuRequest::MergeFrom(const NegotiateMtuRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NegotiateMtuRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.mtusize() != 0) {
    set_mtusize(from.mtusize());
  }
}

void NegotiateMtuRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NegotiateMtuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NegotiateMtuRequest::CopyFrom(const NegotiateMtuRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NegotiateMtuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NegotiateMtuRequest::IsInitialized() const {
  return true;
}

void NegotiateMtuRequest::Swap(NegotiateMtuRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NegotiateMtuRequest::InternalSwap(NegotiateMtuRequest* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mtusize_, other->mtusize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NegotiateMtuRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NegotiateMtuInfo::InitAsDefaultInstance() {
  ::_NegotiateMtuInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NegotiateMtuInfo::kDeviceIdFieldNumber;
const int NegotiateMtuInfo::kMtuSizeFieldNumber;
const int NegotiateMtuInfo::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NegotiateMtuInfo::NegotiateMtuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_NegotiateMtuInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NegotiateMtuInfo)
}
NegotiateMtuInfo::NegotiateMtuInfo(const NegotiateMtuInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  mtusize_ = from.mtusize_;
  // @@protoc_insertion_point(copy_constructor:NegotiateMtuInfo)
}

void NegotiateMtuInfo::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&failure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtusize_) -
      reinterpret_cast<char*>(&failure_)) + sizeof(mtusize_));
}

NegotiateMtuInfo::~NegotiateMtuInfo() {
  // @@protoc_insertion_point(destructor:NegotiateMtuInfo)
  SharedDtor();
}

void NegotiateMtuInfo::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete failure_;
}

void NegotiateMtuInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NegotiateMtuInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NegotiateMtuInfo& NegotiateMtuInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_NegotiateMtuInfo.base);
  return *internal_default_instance();
}


void NegotiateMtuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NegotiateMtuInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  mtusize_ = 0;
  _internal_metadata_.Clear();
}

bool NegotiateMtuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NegotiateMtuInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NegotiateMtuInfo.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtuSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtusize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GenericFailure failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NegotiateMtuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NegotiateMtuInfo)
  return false;
#undef DO_
}

void NegotiateMtuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NegotiateMtuInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NegotiateMtuInfo.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // int32 mtuSize = 2;
  if (this->mtusize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mtusize(), output);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NegotiateMtuInfo)
}

::google::protobuf::uint8* NegotiateMtuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NegotiateMtuInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NegotiateMtuInfo.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // int32 mtuSize = 2;
  if (this->mtusize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mtusize(), target);
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NegotiateMtuInfo)
  return target;
}

size_t NegotiateMtuInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NegotiateMtuInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // .GenericFailure failure = 3;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  // int32 mtuSize = 2;
  if (this->mtusize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtusize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NegotiateMtuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NegotiateMtuInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const NegotiateMtuInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NegotiateMtuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NegotiateMtuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NegotiateMtuInfo)
    MergeFrom(*source);
  }
}

void NegotiateMtuInfo::MergeFrom(const NegotiateMtuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NegotiateMtuInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
  if (from.mtusize() != 0) {
    set_mtusize(from.mtusize());
  }
}

void NegotiateMtuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NegotiateMtuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NegotiateMtuInfo::CopyFrom(const NegotiateMtuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NegotiateMtuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NegotiateMtuInfo::IsInitialized() const {
  return true;
}

void NegotiateMtuInfo::Swap(NegotiateMtuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NegotiateMtuInfo::InternalSwap(NegotiateMtuInfo* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(failure_, other->failure_);
  swap(mtusize_, other->mtusize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NegotiateMtuInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BleStatusInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BleStatusInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BleStatusInfo::BleStatusInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_BleStatusInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BleStatusInfo)
}
BleStatusInfo::BleStatusInfo(const BleStatusInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:BleStatusInfo)
}

void BleStatusInfo::SharedCtor() {
  status_ = 0;
}

BleStatusInfo::~BleStatusInfo() {
  // @@protoc_insertion_point(destructor:BleStatusInfo)
  SharedDtor();
}

void BleStatusInfo::SharedDtor() {
}

void BleStatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BleStatusInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BleStatusInfo& BleStatusInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_BleStatusInfo.base);
  return *internal_default_instance();
}


void BleStatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:BleStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool BleStatusInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BleStatusInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BleStatusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BleStatusInfo)
  return false;
#undef DO_
}

void BleStatusInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BleStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BleStatusInfo)
}

::google::protobuf::uint8* BleStatusInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BleStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BleStatusInfo)
  return target;
}

size_t BleStatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BleStatusInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BleStatusInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BleStatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BleStatusInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BleStatusInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BleStatusInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BleStatusInfo)
    MergeFrom(*source);
  }
}

void BleStatusInfo::MergeFrom(const BleStatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BleStatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void BleStatusInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BleStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BleStatusInfo::CopyFrom(const BleStatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BleStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleStatusInfo::IsInitialized() const {
  return true;
}

void BleStatusInfo::Swap(BleStatusInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BleStatusInfo::InternalSwap(BleStatusInfo* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BleStatusInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeConnectionPriorityRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeConnectionPriorityRequest::kDeviceIdFieldNumber;
const int ChangeConnectionPriorityRequest::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeConnectionPriorityRequest::ChangeConnectionPriorityRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ChangeConnectionPriorityRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeConnectionPriorityRequest)
}
ChangeConnectionPriorityRequest::ChangeConnectionPriorityRequest(const ChangeConnectionPriorityRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:ChangeConnectionPriorityRequest)
}

void ChangeConnectionPriorityRequest::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  priority_ = 0;
}

ChangeConnectionPriorityRequest::~ChangeConnectionPriorityRequest() {
  // @@protoc_insertion_point(destructor:ChangeConnectionPriorityRequest)
  SharedDtor();
}

void ChangeConnectionPriorityRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeConnectionPriorityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeConnectionPriorityRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeConnectionPriorityRequest& ChangeConnectionPriorityRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ChangeConnectionPriorityRequest.base);
  return *internal_default_instance();
}


void ChangeConnectionPriorityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeConnectionPriorityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  priority_ = 0;
  _internal_metadata_.Clear();
}

bool ChangeConnectionPriorityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeConnectionPriorityRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChangeConnectionPriorityRequest.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeConnectionPriorityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeConnectionPriorityRequest)
  return false;
#undef DO_
}

void ChangeConnectionPriorityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeConnectionPriorityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChangeConnectionPriorityRequest.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeConnectionPriorityRequest)
}

::google::protobuf::uint8* ChangeConnectionPriorityRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChangeConnectionPriorityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChangeConnectionPriorityRequest.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeConnectionPriorityRequest)
  return target;
}

size_t ChangeConnectionPriorityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeConnectionPriorityRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeConnectionPriorityRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeConnectionPriorityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeConnectionPriorityRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeConnectionPriorityRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeConnectionPriorityRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeConnectionPriorityRequest)
    MergeFrom(*source);
  }
}

void ChangeConnectionPriorityRequest::MergeFrom(const ChangeConnectionPriorityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeConnectionPriorityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void ChangeConnectionPriorityRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeConnectionPriorityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeConnectionPriorityRequest::CopyFrom(const ChangeConnectionPriorityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeConnectionPriorityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeConnectionPriorityRequest::IsInitialized() const {
  return true;
}

void ChangeConnectionPriorityRequest::Swap(ChangeConnectionPriorityRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeConnectionPriorityRequest::InternalSwap(ChangeConnectionPriorityRequest* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeConnectionPriorityRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeConnectionPriorityInfo::InitAsDefaultInstance() {
  ::_ChangeConnectionPriorityInfo_default_instance_._instance.get_mutable()->failure_ = const_cast< ::GenericFailure*>(
      ::GenericFailure::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeConnectionPriorityInfo::kDeviceIdFieldNumber;
const int ChangeConnectionPriorityInfo::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeConnectionPriorityInfo::ChangeConnectionPriorityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ChangeConnectionPriorityInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeConnectionPriorityInfo)
}
ChangeConnectionPriorityInfo::ChangeConnectionPriorityInfo(const ChangeConnectionPriorityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_failure()) {
    failure_ = new ::GenericFailure(*from.failure_);
  } else {
    failure_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ChangeConnectionPriorityInfo)
}

void ChangeConnectionPriorityInfo::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  failure_ = NULL;
}

ChangeConnectionPriorityInfo::~ChangeConnectionPriorityInfo() {
  // @@protoc_insertion_point(destructor:ChangeConnectionPriorityInfo)
  SharedDtor();
}

void ChangeConnectionPriorityInfo::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete failure_;
}

void ChangeConnectionPriorityInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeConnectionPriorityInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeConnectionPriorityInfo& ChangeConnectionPriorityInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ChangeConnectionPriorityInfo.base);
  return *internal_default_instance();
}


void ChangeConnectionPriorityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeConnectionPriorityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) {
    delete failure_;
  }
  failure_ = NULL;
  _internal_metadata_.Clear();
}

bool ChangeConnectionPriorityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeConnectionPriorityInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChangeConnectionPriorityInfo.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GenericFailure failure = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeConnectionPriorityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeConnectionPriorityInfo)
  return false;
#undef DO_
}

void ChangeConnectionPriorityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeConnectionPriorityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChangeConnectionPriorityInfo.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // .GenericFailure failure = 2;
  if (this->has_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeConnectionPriorityInfo)
}

::google::protobuf::uint8* ChangeConnectionPriorityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChangeConnectionPriorityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChangeConnectionPriorityInfo.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // .GenericFailure failure = 2;
  if (this->has_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeConnectionPriorityInfo)
  return target;
}

size_t ChangeConnectionPriorityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeConnectionPriorityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // .GenericFailure failure = 2;
  if (this->has_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeConnectionPriorityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeConnectionPriorityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeConnectionPriorityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeConnectionPriorityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeConnectionPriorityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeConnectionPriorityInfo)
    MergeFrom(*source);
  }
}

void ChangeConnectionPriorityInfo::MergeFrom(const ChangeConnectionPriorityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeConnectionPriorityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_failure()) {
    mutable_failure()->::GenericFailure::MergeFrom(from.failure());
  }
}

void ChangeConnectionPriorityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeConnectionPriorityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeConnectionPriorityInfo::CopyFrom(const ChangeConnectionPriorityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeConnectionPriorityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeConnectionPriorityInfo::IsInitialized() const {
  return true;
}

void ChangeConnectionPriorityInfo::Swap(ChangeConnectionPriorityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeConnectionPriorityInfo::InternalSwap(ChangeConnectionPriorityInfo* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(failure_, other->failure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeConnectionPriorityInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CharacteristicAddress::InitAsDefaultInstance() {
  ::_CharacteristicAddress_default_instance_._instance.get_mutable()->serviceuuid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
  ::_CharacteristicAddress_default_instance_._instance.get_mutable()->characteristicuuid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacteristicAddress::kDeviceIdFieldNumber;
const int CharacteristicAddress::kServiceUuidFieldNumber;
const int CharacteristicAddress::kCharacteristicUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacteristicAddress::CharacteristicAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CharacteristicAddress)
}
CharacteristicAddress::CharacteristicAddress(const CharacteristicAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_serviceuuid()) {
    serviceuuid_ = new ::Uuid(*from.serviceuuid_);
  } else {
    serviceuuid_ = NULL;
  }
  if (from.has_characteristicuuid()) {
    characteristicuuid_ = new ::Uuid(*from.characteristicuuid_);
  } else {
    characteristicuuid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CharacteristicAddress)
}

void CharacteristicAddress::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serviceuuid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&characteristicuuid_) -
      reinterpret_cast<char*>(&serviceuuid_)) + sizeof(characteristicuuid_));
}

CharacteristicAddress::~CharacteristicAddress() {
  // @@protoc_insertion_point(destructor:CharacteristicAddress)
  SharedDtor();
}

void CharacteristicAddress::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serviceuuid_;
  if (this != internal_default_instance()) delete characteristicuuid_;
}

void CharacteristicAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CharacteristicAddress::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CharacteristicAddress& CharacteristicAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_CharacteristicAddress.base);
  return *internal_default_instance();
}


void CharacteristicAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:CharacteristicAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serviceuuid_ != NULL) {
    delete serviceuuid_;
  }
  serviceuuid_ = NULL;
  if (GetArenaNoVirtual() == NULL && characteristicuuid_ != NULL) {
    delete characteristicuuid_;
  }
  characteristicuuid_ = NULL;
  _internal_metadata_.Clear();
}

bool CharacteristicAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CharacteristicAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CharacteristicAddress.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Uuid serviceUuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serviceuuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Uuid characteristicUuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristicuuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CharacteristicAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CharacteristicAddress)
  return false;
#undef DO_
}

void CharacteristicAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CharacteristicAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CharacteristicAddress.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // .Uuid serviceUuid = 2;
  if (this->has_serviceuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_serviceuuid(), output);
  }

  // .Uuid characteristicUuid = 3;
  if (this->has_characteristicuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_characteristicuuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CharacteristicAddress)
}

::google::protobuf::uint8* CharacteristicAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CharacteristicAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CharacteristicAddress.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // .Uuid serviceUuid = 2;
  if (this->has_serviceuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_serviceuuid(), deterministic, target);
  }

  // .Uuid characteristicUuid = 3;
  if (this->has_characteristicuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_characteristicuuid(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharacteristicAddress)
  return target;
}

size_t CharacteristicAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharacteristicAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // .Uuid serviceUuid = 2;
  if (this->has_serviceuuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serviceuuid_);
  }

  // .Uuid characteristicUuid = 3;
  if (this->has_characteristicuuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristicuuid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacteristicAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CharacteristicAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacteristicAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacteristicAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CharacteristicAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CharacteristicAddress)
    MergeFrom(*source);
  }
}

void CharacteristicAddress::MergeFrom(const CharacteristicAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CharacteristicAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.has_serviceuuid()) {
    mutable_serviceuuid()->::Uuid::MergeFrom(from.serviceuuid());
  }
  if (from.has_characteristicuuid()) {
    mutable_characteristicuuid()->::Uuid::MergeFrom(from.characteristicuuid());
  }
}

void CharacteristicAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CharacteristicAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacteristicAddress::CopyFrom(const CharacteristicAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharacteristicAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacteristicAddress::IsInitialized() const {
  return true;
}

void CharacteristicAddress::Swap(CharacteristicAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacteristicAddress::InternalSwap(CharacteristicAddress* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serviceuuid_, other->serviceuuid_);
  swap(characteristicuuid_, other->characteristicuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CharacteristicAddress::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceDataEntry::InitAsDefaultInstance() {
  ::_ServiceDataEntry_default_instance_._instance.get_mutable()->serviceuuid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceDataEntry::kServiceUuidFieldNumber;
const int ServiceDataEntry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceDataEntry::ServiceDataEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ServiceDataEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceDataEntry)
}
ServiceDataEntry::ServiceDataEntry(const ServiceDataEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_serviceuuid()) {
    serviceuuid_ = new ::Uuid(*from.serviceuuid_);
  } else {
    serviceuuid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ServiceDataEntry)
}

void ServiceDataEntry::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serviceuuid_ = NULL;
}

ServiceDataEntry::~ServiceDataEntry() {
  // @@protoc_insertion_point(destructor:ServiceDataEntry)
  SharedDtor();
}

void ServiceDataEntry::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serviceuuid_;
}

void ServiceDataEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceDataEntry::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceDataEntry& ServiceDataEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ServiceDataEntry.base);
  return *internal_default_instance();
}


void ServiceDataEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceDataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && serviceuuid_ != NULL) {
    delete serviceuuid_;
  }
  serviceuuid_ = NULL;
  _internal_metadata_.Clear();
}

bool ServiceDataEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceDataEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Uuid serviceUuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serviceuuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceDataEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceDataEntry)
  return false;
#undef DO_
}

void ServiceDataEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceDataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid serviceUuid = 1;
  if (this->has_serviceuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_serviceuuid(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceDataEntry)
}

::google::protobuf::uint8* ServiceDataEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceDataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid serviceUuid = 1;
  if (this->has_serviceuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_serviceuuid(), deterministic, target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceDataEntry)
  return target;
}

size_t ServiceDataEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceDataEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .Uuid serviceUuid = 1;
  if (this->has_serviceuuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serviceuuid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceDataEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceDataEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceDataEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceDataEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceDataEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceDataEntry)
    MergeFrom(*source);
  }
}

void ServiceDataEntry::MergeFrom(const ServiceDataEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceDataEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_serviceuuid()) {
    mutable_serviceuuid()->::Uuid::MergeFrom(from.serviceuuid());
  }
}

void ServiceDataEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceDataEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceDataEntry::CopyFrom(const ServiceDataEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceDataEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceDataEntry::IsInitialized() const {
  return true;
}

void ServiceDataEntry::Swap(ServiceDataEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceDataEntry::InternalSwap(ServiceDataEntry* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serviceuuid_, other->serviceuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceDataEntry::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServicesWithCharacteristics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServicesWithCharacteristics::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServicesWithCharacteristics::ServicesWithCharacteristics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ServicesWithCharacteristics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServicesWithCharacteristics)
}
ServicesWithCharacteristics::ServicesWithCharacteristics(const ServicesWithCharacteristics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServicesWithCharacteristics)
}

void ServicesWithCharacteristics::SharedCtor() {
}

ServicesWithCharacteristics::~ServicesWithCharacteristics() {
  // @@protoc_insertion_point(destructor:ServicesWithCharacteristics)
  SharedDtor();
}

void ServicesWithCharacteristics::SharedDtor() {
}

void ServicesWithCharacteristics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServicesWithCharacteristics::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServicesWithCharacteristics& ServicesWithCharacteristics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ServicesWithCharacteristics.base);
  return *internal_default_instance();
}


void ServicesWithCharacteristics::Clear() {
// @@protoc_insertion_point(message_clear_start:ServicesWithCharacteristics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool ServicesWithCharacteristics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServicesWithCharacteristics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServiceWithCharacteristics items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServicesWithCharacteristics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServicesWithCharacteristics)
  return false;
#undef DO_
}

void ServicesWithCharacteristics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServicesWithCharacteristics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServiceWithCharacteristics items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServicesWithCharacteristics)
}

::google::protobuf::uint8* ServicesWithCharacteristics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServicesWithCharacteristics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServiceWithCharacteristics items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServicesWithCharacteristics)
  return target;
}

size_t ServicesWithCharacteristics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServicesWithCharacteristics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServiceWithCharacteristics items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServicesWithCharacteristics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServicesWithCharacteristics)
  GOOGLE_DCHECK_NE(&from, this);
  const ServicesWithCharacteristics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServicesWithCharacteristics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServicesWithCharacteristics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServicesWithCharacteristics)
    MergeFrom(*source);
  }
}

void ServicesWithCharacteristics::MergeFrom(const ServicesWithCharacteristics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServicesWithCharacteristics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ServicesWithCharacteristics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServicesWithCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServicesWithCharacteristics::CopyFrom(const ServicesWithCharacteristics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServicesWithCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServicesWithCharacteristics::IsInitialized() const {
  return true;
}

void ServicesWithCharacteristics::Swap(ServicesWithCharacteristics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServicesWithCharacteristics::InternalSwap(ServicesWithCharacteristics* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServicesWithCharacteristics::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceWithCharacteristics::InitAsDefaultInstance() {
  ::_ServiceWithCharacteristics_default_instance_._instance.get_mutable()->serviceid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceWithCharacteristics::kServiceIdFieldNumber;
const int ServiceWithCharacteristics::kCharacteristicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceWithCharacteristics::ServiceWithCharacteristics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_ServiceWithCharacteristics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceWithCharacteristics)
}
ServiceWithCharacteristics::ServiceWithCharacteristics(const ServiceWithCharacteristics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      characteristics_(from.characteristics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_serviceid()) {
    serviceid_ = new ::Uuid(*from.serviceid_);
  } else {
    serviceid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ServiceWithCharacteristics)
}

void ServiceWithCharacteristics::SharedCtor() {
  serviceid_ = NULL;
}

ServiceWithCharacteristics::~ServiceWithCharacteristics() {
  // @@protoc_insertion_point(destructor:ServiceWithCharacteristics)
  SharedDtor();
}

void ServiceWithCharacteristics::SharedDtor() {
  if (this != internal_default_instance()) delete serviceid_;
}

void ServiceWithCharacteristics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceWithCharacteristics::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceWithCharacteristics& ServiceWithCharacteristics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_ServiceWithCharacteristics.base);
  return *internal_default_instance();
}


void ServiceWithCharacteristics::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceWithCharacteristics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characteristics_.Clear();
  if (GetArenaNoVirtual() == NULL && serviceid_ != NULL) {
    delete serviceid_;
  }
  serviceid_ = NULL;
  _internal_metadata_.Clear();
}

bool ServiceWithCharacteristics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceWithCharacteristics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Uuid serviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Uuid characteristics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_characteristics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceWithCharacteristics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceWithCharacteristics)
  return false;
#undef DO_
}

void ServiceWithCharacteristics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceWithCharacteristics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid serviceId = 1;
  if (this->has_serviceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_serviceid(), output);
  }

  // repeated .Uuid characteristics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characteristics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->characteristics(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceWithCharacteristics)
}

::google::protobuf::uint8* ServiceWithCharacteristics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceWithCharacteristics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid serviceId = 1;
  if (this->has_serviceid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_serviceid(), deterministic, target);
  }

  // repeated .Uuid characteristics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characteristics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->characteristics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceWithCharacteristics)
  return target;
}

size_t ServiceWithCharacteristics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceWithCharacteristics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Uuid characteristics = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->characteristics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->characteristics(static_cast<int>(i)));
    }
  }

  // .Uuid serviceId = 1;
  if (this->has_serviceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serviceid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceWithCharacteristics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceWithCharacteristics)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceWithCharacteristics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceWithCharacteristics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceWithCharacteristics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceWithCharacteristics)
    MergeFrom(*source);
  }
}

void ServiceWithCharacteristics::MergeFrom(const ServiceWithCharacteristics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceWithCharacteristics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characteristics_.MergeFrom(from.characteristics_);
  if (from.has_serviceid()) {
    mutable_serviceid()->::Uuid::MergeFrom(from.serviceid());
  }
}

void ServiceWithCharacteristics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceWithCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceWithCharacteristics::CopyFrom(const ServiceWithCharacteristics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceWithCharacteristics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceWithCharacteristics::IsInitialized() const {
  return true;
}

void ServiceWithCharacteristics::Swap(ServiceWithCharacteristics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceWithCharacteristics::InternalSwap(ServiceWithCharacteristics* other) {
  using std::swap;
  CastToBase(&characteristics_)->InternalSwap(CastToBase(&other->characteristics_));
  swap(serviceid_, other->serviceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceWithCharacteristics::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscoverServicesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoverServicesRequest::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoverServicesRequest::DiscoverServicesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DiscoverServicesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DiscoverServicesRequest)
}
DiscoverServicesRequest::DiscoverServicesRequest(const DiscoverServicesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:DiscoverServicesRequest)
}

void DiscoverServicesRequest::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DiscoverServicesRequest::~DiscoverServicesRequest() {
  // @@protoc_insertion_point(destructor:DiscoverServicesRequest)
  SharedDtor();
}

void DiscoverServicesRequest::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiscoverServicesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscoverServicesRequest::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoverServicesRequest& DiscoverServicesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DiscoverServicesRequest.base);
  return *internal_default_instance();
}


void DiscoverServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DiscoverServicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DiscoverServicesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DiscoverServicesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DiscoverServicesRequest.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DiscoverServicesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DiscoverServicesRequest)
  return false;
#undef DO_
}

void DiscoverServicesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DiscoverServicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DiscoverServicesRequest.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DiscoverServicesRequest)
}

::google::protobuf::uint8* DiscoverServicesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DiscoverServicesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DiscoverServicesRequest.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DiscoverServicesRequest)
  return target;
}

size_t DiscoverServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DiscoverServicesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscoverServicesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DiscoverServicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoverServicesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoverServicesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DiscoverServicesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DiscoverServicesRequest)
    MergeFrom(*source);
  }
}

void DiscoverServicesRequest::MergeFrom(const DiscoverServicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DiscoverServicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
}

void DiscoverServicesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DiscoverServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoverServicesRequest::CopyFrom(const DiscoverServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DiscoverServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverServicesRequest::IsInitialized() const {
  return true;
}

void DiscoverServicesRequest::Swap(DiscoverServicesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoverServicesRequest::InternalSwap(DiscoverServicesRequest* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscoverServicesRequest::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscoverServicesInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoverServicesInfo::kDeviceIdFieldNumber;
const int DiscoverServicesInfo::kServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoverServicesInfo::DiscoverServicesInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DiscoverServicesInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DiscoverServicesInfo)
}
DiscoverServicesInfo::DiscoverServicesInfo(const DiscoverServicesInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      services_(from.services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:DiscoverServicesInfo)
}

void DiscoverServicesInfo::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DiscoverServicesInfo::~DiscoverServicesInfo() {
  // @@protoc_insertion_point(destructor:DiscoverServicesInfo)
  SharedDtor();
}

void DiscoverServicesInfo::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiscoverServicesInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscoverServicesInfo::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoverServicesInfo& DiscoverServicesInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DiscoverServicesInfo.base);
  return *internal_default_instance();
}


void DiscoverServicesInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DiscoverServicesInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DiscoverServicesInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DiscoverServicesInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DiscoverServicesInfo.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DiscoveredService services = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DiscoverServicesInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DiscoverServicesInfo)
  return false;
#undef DO_
}

void DiscoverServicesInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DiscoverServicesInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DiscoverServicesInfo.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // repeated .DiscoveredService services = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->services(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DiscoverServicesInfo)
}

::google::protobuf::uint8* DiscoverServicesInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DiscoverServicesInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DiscoverServicesInfo.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // repeated .DiscoveredService services = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->services(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DiscoverServicesInfo)
  return target;
}

size_t DiscoverServicesInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DiscoverServicesInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DiscoveredService services = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  // string deviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscoverServicesInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DiscoverServicesInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoverServicesInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoverServicesInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DiscoverServicesInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DiscoverServicesInfo)
    MergeFrom(*source);
  }
}

void DiscoverServicesInfo::MergeFrom(const DiscoverServicesInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DiscoverServicesInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
}

void DiscoverServicesInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DiscoverServicesInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoverServicesInfo::CopyFrom(const DiscoverServicesInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DiscoverServicesInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverServicesInfo::IsInitialized() const {
  return true;
}

void DiscoverServicesInfo::Swap(DiscoverServicesInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoverServicesInfo::InternalSwap(DiscoverServicesInfo* other) {
  using std::swap;
  CastToBase(&services_)->InternalSwap(CastToBase(&other->services_));
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscoverServicesInfo::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscoveredService::InitAsDefaultInstance() {
  ::_DiscoveredService_default_instance_._instance.get_mutable()->serviceuuid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoveredService::kServiceUuidFieldNumber;
const int DiscoveredService::kCharacteristicUuidsFieldNumber;
const int DiscoveredService::kIncludedServicesFieldNumber;
const int DiscoveredService::kCharacteristicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoveredService::DiscoveredService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DiscoveredService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DiscoveredService)
}
DiscoveredService::DiscoveredService(const DiscoveredService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      characteristicuuids_(from.characteristicuuids_),
      includedservices_(from.includedservices_),
      characteristics_(from.characteristics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_serviceuuid()) {
    serviceuuid_ = new ::Uuid(*from.serviceuuid_);
  } else {
    serviceuuid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DiscoveredService)
}

void DiscoveredService::SharedCtor() {
  serviceuuid_ = NULL;
}

DiscoveredService::~DiscoveredService() {
  // @@protoc_insertion_point(destructor:DiscoveredService)
  SharedDtor();
}

void DiscoveredService::SharedDtor() {
  if (this != internal_default_instance()) delete serviceuuid_;
}

void DiscoveredService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscoveredService::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoveredService& DiscoveredService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DiscoveredService.base);
  return *internal_default_instance();
}


void DiscoveredService::Clear() {
// @@protoc_insertion_point(message_clear_start:DiscoveredService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characteristicuuids_.Clear();
  includedservices_.Clear();
  characteristics_.Clear();
  if (GetArenaNoVirtual() == NULL && serviceuuid_ != NULL) {
    delete serviceuuid_;
  }
  serviceuuid_ = NULL;
  _internal_metadata_.Clear();
}

bool DiscoveredService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DiscoveredService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Uuid serviceUuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serviceuuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Uuid characteristicUuids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_characteristicuuids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DiscoveredService includedServices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_includedservices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DiscoveredCharacteristic characteristics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_characteristics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DiscoveredService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DiscoveredService)
  return false;
#undef DO_
}

void DiscoveredService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DiscoveredService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid serviceUuid = 1;
  if (this->has_serviceuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_serviceuuid(), output);
  }

  // repeated .Uuid characteristicUuids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characteristicuuids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->characteristicuuids(static_cast<int>(i)),
      output);
  }

  // repeated .DiscoveredService includedServices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->includedservices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->includedservices(static_cast<int>(i)),
      output);
  }

  // repeated .DiscoveredCharacteristic characteristics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characteristics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->characteristics(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DiscoveredService)
}

::google::protobuf::uint8* DiscoveredService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DiscoveredService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid serviceUuid = 1;
  if (this->has_serviceuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_serviceuuid(), deterministic, target);
  }

  // repeated .Uuid characteristicUuids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characteristicuuids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->characteristicuuids(static_cast<int>(i)), deterministic, target);
  }

  // repeated .DiscoveredService includedServices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->includedservices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->includedservices(static_cast<int>(i)), deterministic, target);
  }

  // repeated .DiscoveredCharacteristic characteristics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characteristics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->characteristics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DiscoveredService)
  return target;
}

size_t DiscoveredService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DiscoveredService)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Uuid characteristicUuids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->characteristicuuids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->characteristicuuids(static_cast<int>(i)));
    }
  }

  // repeated .DiscoveredService includedServices = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->includedservices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->includedservices(static_cast<int>(i)));
    }
  }

  // repeated .DiscoveredCharacteristic characteristics = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->characteristics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->characteristics(static_cast<int>(i)));
    }
  }

  // .Uuid serviceUuid = 1;
  if (this->has_serviceuuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serviceuuid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscoveredService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DiscoveredService)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoveredService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoveredService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DiscoveredService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DiscoveredService)
    MergeFrom(*source);
  }
}

void DiscoveredService::MergeFrom(const DiscoveredService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DiscoveredService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characteristicuuids_.MergeFrom(from.characteristicuuids_);
  includedservices_.MergeFrom(from.includedservices_);
  characteristics_.MergeFrom(from.characteristics_);
  if (from.has_serviceuuid()) {
    mutable_serviceuuid()->::Uuid::MergeFrom(from.serviceuuid());
  }
}

void DiscoveredService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DiscoveredService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoveredService::CopyFrom(const DiscoveredService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DiscoveredService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveredService::IsInitialized() const {
  return true;
}

void DiscoveredService::Swap(DiscoveredService* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoveredService::InternalSwap(DiscoveredService* other) {
  using std::swap;
  CastToBase(&characteristicuuids_)->InternalSwap(CastToBase(&other->characteristicuuids_));
  CastToBase(&includedservices_)->InternalSwap(CastToBase(&other->includedservices_));
  CastToBase(&characteristics_)->InternalSwap(CastToBase(&other->characteristics_));
  swap(serviceuuid_, other->serviceuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscoveredService::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscoveredCharacteristic::InitAsDefaultInstance() {
  ::_DiscoveredCharacteristic_default_instance_._instance.get_mutable()->characteristicid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
  ::_DiscoveredCharacteristic_default_instance_._instance.get_mutable()->serviceid_ = const_cast< ::Uuid*>(
      ::Uuid::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoveredCharacteristic::kCharacteristicIdFieldNumber;
const int DiscoveredCharacteristic::kServiceIdFieldNumber;
const int DiscoveredCharacteristic::kIsReadableFieldNumber;
const int DiscoveredCharacteristic::kIsWritableWithResponseFieldNumber;
const int DiscoveredCharacteristic::kIsWritableWithoutResponseFieldNumber;
const int DiscoveredCharacteristic::kIsNotifiableFieldNumber;
const int DiscoveredCharacteristic::kIsIndicatableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoveredCharacteristic::DiscoveredCharacteristic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_DiscoveredCharacteristic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DiscoveredCharacteristic)
}
DiscoveredCharacteristic::DiscoveredCharacteristic(const DiscoveredCharacteristic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_characteristicid()) {
    characteristicid_ = new ::Uuid(*from.characteristicid_);
  } else {
    characteristicid_ = NULL;
  }
  if (from.has_serviceid()) {
    serviceid_ = new ::Uuid(*from.serviceid_);
  } else {
    serviceid_ = NULL;
  }
  ::memcpy(&isreadable_, &from.isreadable_,
    static_cast<size_t>(reinterpret_cast<char*>(&isindicatable_) -
    reinterpret_cast<char*>(&isreadable_)) + sizeof(isindicatable_));
  // @@protoc_insertion_point(copy_constructor:DiscoveredCharacteristic)
}

void DiscoveredCharacteristic::SharedCtor() {
  ::memset(&characteristicid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isindicatable_) -
      reinterpret_cast<char*>(&characteristicid_)) + sizeof(isindicatable_));
}

DiscoveredCharacteristic::~DiscoveredCharacteristic() {
  // @@protoc_insertion_point(destructor:DiscoveredCharacteristic)
  SharedDtor();
}

void DiscoveredCharacteristic::SharedDtor() {
  if (this != internal_default_instance()) delete characteristicid_;
  if (this != internal_default_instance()) delete serviceid_;
}

void DiscoveredCharacteristic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscoveredCharacteristic::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoveredCharacteristic& DiscoveredCharacteristic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_DiscoveredCharacteristic.base);
  return *internal_default_instance();
}


void DiscoveredCharacteristic::Clear() {
// @@protoc_insertion_point(message_clear_start:DiscoveredCharacteristic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && characteristicid_ != NULL) {
    delete characteristicid_;
  }
  characteristicid_ = NULL;
  if (GetArenaNoVirtual() == NULL && serviceid_ != NULL) {
    delete serviceid_;
  }
  serviceid_ = NULL;
  ::memset(&isreadable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isindicatable_) -
      reinterpret_cast<char*>(&isreadable_)) + sizeof(isindicatable_));
  _internal_metadata_.Clear();
}

bool DiscoveredCharacteristic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DiscoveredCharacteristic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Uuid characteristicId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_characteristicid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Uuid serviceId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isReadable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isreadable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isWritableWithResponse = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswritablewithresponse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isWritableWithoutResponse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswritablewithoutresponse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isNotifiable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnotifiable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isIndicatable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isindicatable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DiscoveredCharacteristic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DiscoveredCharacteristic)
  return false;
#undef DO_
}

void DiscoveredCharacteristic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DiscoveredCharacteristic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid characteristicId = 1;
  if (this->has_characteristicid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_characteristicid(), output);
  }

  // .Uuid serviceId = 2;
  if (this->has_serviceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_serviceid(), output);
  }

  // bool isReadable = 3;
  if (this->isreadable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isreadable(), output);
  }

  // bool isWritableWithResponse = 4;
  if (this->iswritablewithresponse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->iswritablewithresponse(), output);
  }

  // bool isWritableWithoutResponse = 5;
  if (this->iswritablewithoutresponse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->iswritablewithoutresponse(), output);
  }

  // bool isNotifiable = 6;
  if (this->isnotifiable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isnotifiable(), output);
  }

  // bool isIndicatable = 7;
  if (this->isindicatable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isindicatable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DiscoveredCharacteristic)
}

::google::protobuf::uint8* DiscoveredCharacteristic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DiscoveredCharacteristic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Uuid characteristicId = 1;
  if (this->has_characteristicid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_characteristicid(), deterministic, target);
  }

  // .Uuid serviceId = 2;
  if (this->has_serviceid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_serviceid(), deterministic, target);
  }

  // bool isReadable = 3;
  if (this->isreadable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isreadable(), target);
  }

  // bool isWritableWithResponse = 4;
  if (this->iswritablewithresponse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->iswritablewithresponse(), target);
  }

  // bool isWritableWithoutResponse = 5;
  if (this->iswritablewithoutresponse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->iswritablewithoutresponse(), target);
  }

  // bool isNotifiable = 6;
  if (this->isnotifiable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isnotifiable(), target);
  }

  // bool isIndicatable = 7;
  if (this->isindicatable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isindicatable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DiscoveredCharacteristic)
  return target;
}

size_t DiscoveredCharacteristic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DiscoveredCharacteristic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Uuid characteristicId = 1;
  if (this->has_characteristicid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *characteristicid_);
  }

  // .Uuid serviceId = 2;
  if (this->has_serviceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serviceid_);
  }

  // bool isReadable = 3;
  if (this->isreadable() != 0) {
    total_size += 1 + 1;
  }

  // bool isWritableWithResponse = 4;
  if (this->iswritablewithresponse() != 0) {
    total_size += 1 + 1;
  }

  // bool isWritableWithoutResponse = 5;
  if (this->iswritablewithoutresponse() != 0) {
    total_size += 1 + 1;
  }

  // bool isNotifiable = 6;
  if (this->isnotifiable() != 0) {
    total_size += 1 + 1;
  }

  // bool isIndicatable = 7;
  if (this->isindicatable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscoveredCharacteristic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DiscoveredCharacteristic)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoveredCharacteristic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoveredCharacteristic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DiscoveredCharacteristic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DiscoveredCharacteristic)
    MergeFrom(*source);
  }
}

void DiscoveredCharacteristic::MergeFrom(const DiscoveredCharacteristic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DiscoveredCharacteristic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_characteristicid()) {
    mutable_characteristicid()->::Uuid::MergeFrom(from.characteristicid());
  }
  if (from.has_serviceid()) {
    mutable_serviceid()->::Uuid::MergeFrom(from.serviceid());
  }
  if (from.isreadable() != 0) {
    set_isreadable(from.isreadable());
  }
  if (from.iswritablewithresponse() != 0) {
    set_iswritablewithresponse(from.iswritablewithresponse());
  }
  if (from.iswritablewithoutresponse() != 0) {
    set_iswritablewithoutresponse(from.iswritablewithoutresponse());
  }
  if (from.isnotifiable() != 0) {
    set_isnotifiable(from.isnotifiable());
  }
  if (from.isindicatable() != 0) {
    set_isindicatable(from.isindicatable());
  }
}

void DiscoveredCharacteristic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DiscoveredCharacteristic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoveredCharacteristic::CopyFrom(const DiscoveredCharacteristic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DiscoveredCharacteristic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveredCharacteristic::IsInitialized() const {
  return true;
}

void DiscoveredCharacteristic::Swap(DiscoveredCharacteristic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoveredCharacteristic::InternalSwap(DiscoveredCharacteristic* other) {
  using std::swap;
  swap(characteristicid_, other->characteristicid_);
  swap(serviceid_, other->serviceid_);
  swap(isreadable_, other->isreadable_);
  swap(iswritablewithresponse_, other->iswritablewithresponse_);
  swap(iswritablewithoutresponse_, other->iswritablewithoutresponse_);
  swap(isnotifiable_, other->isnotifiable_);
  swap(isindicatable_, other->isindicatable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscoveredCharacteristic::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uuid::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uuid::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uuid::Uuid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_Uuid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Uuid)
}
Uuid::Uuid(const Uuid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:Uuid)
}

void Uuid::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Uuid::~Uuid() {
  // @@protoc_insertion_point(destructor:Uuid)
  SharedDtor();
}

void Uuid::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Uuid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uuid::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uuid& Uuid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_Uuid.base);
  return *internal_default_instance();
}


void Uuid::Clear() {
// @@protoc_insertion_point(message_clear_start:Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Uuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Uuid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Uuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Uuid)
  return false;
#undef DO_
}

void Uuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Uuid)
}

::google::protobuf::uint8* Uuid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Uuid)
  return target;
}

size_t Uuid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Uuid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uuid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Uuid)
  GOOGLE_DCHECK_NE(&from, this);
  const Uuid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uuid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Uuid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Uuid)
    MergeFrom(*source);
  }
}

void Uuid::MergeFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Uuid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void Uuid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uuid::CopyFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uuid::IsInitialized() const {
  return true;
}

void Uuid::Swap(Uuid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uuid::InternalSwap(Uuid* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uuid::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenericFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericFailure::kCodeFieldNumber;
const int GenericFailure::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericFailure::GenericFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bledata_2eproto::scc_info_GenericFailure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GenericFailure)
}
GenericFailure::GenericFailure(const GenericFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GenericFailure)
}

void GenericFailure::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GenericFailure::~GenericFailure() {
  // @@protoc_insertion_point(destructor:GenericFailure)
  SharedDtor();
}

void GenericFailure::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenericFailure::descriptor() {
  ::protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericFailure& GenericFailure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bledata_2eproto::scc_info_GenericFailure.base);
  return *internal_default_instance();
}


void GenericFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:GenericFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool GenericFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GenericFailure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GenericFailure.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GenericFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GenericFailure)
  return false;
#undef DO_
}

void GenericFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GenericFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GenericFailure.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GenericFailure)
}

::google::protobuf::uint8* GenericFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GenericFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GenericFailure.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GenericFailure)
  return target;
}

size_t GenericFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GenericFailure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GenericFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GenericFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GenericFailure)
    MergeFrom(*source);
  }
}

void GenericFailure::MergeFrom(const GenericFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GenericFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void GenericFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GenericFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericFailure::CopyFrom(const GenericFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GenericFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericFailure::IsInitialized() const {
  return true;
}

void GenericFailure::Swap(GenericFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericFailure::InternalSwap(GenericFailure* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenericFailure::GetMetadata() const {
  protobuf_bledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ScanForDevicesRequest* Arena::CreateMaybeMessage< ::ScanForDevicesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ScanForDevicesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DeviceScanInfo* Arena::CreateMaybeMessage< ::DeviceScanInfo >(Arena* arena) {
  return Arena::CreateInternal< ::DeviceScanInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ConnectToDeviceRequest* Arena::CreateMaybeMessage< ::ConnectToDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ConnectToDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DeviceInfo* Arena::CreateMaybeMessage< ::DeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::DeviceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DisconnectFromDeviceRequest* Arena::CreateMaybeMessage< ::DisconnectFromDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DisconnectFromDeviceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ClearGattCacheRequest* Arena::CreateMaybeMessage< ::ClearGattCacheRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ClearGattCacheRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ClearGattCacheInfo* Arena::CreateMaybeMessage< ::ClearGattCacheInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ClearGattCacheInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NotifyCharacteristicRequest* Arena::CreateMaybeMessage< ::NotifyCharacteristicRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NotifyCharacteristicRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NotifyNoMoreCharacteristicRequest* Arena::CreateMaybeMessage< ::NotifyNoMoreCharacteristicRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NotifyNoMoreCharacteristicRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReadCharacteristicRequest* Arena::CreateMaybeMessage< ::ReadCharacteristicRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ReadCharacteristicRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CharacteristicValueInfo* Arena::CreateMaybeMessage< ::CharacteristicValueInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CharacteristicValueInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::WriteCharacteristicRequest* Arena::CreateMaybeMessage< ::WriteCharacteristicRequest >(Arena* arena) {
  return Arena::CreateInternal< ::WriteCharacteristicRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::WriteCharacteristicInfo* Arena::CreateMaybeMessage< ::WriteCharacteristicInfo >(Arena* arena) {
  return Arena::CreateInternal< ::WriteCharacteristicInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NegotiateMtuRequest* Arena::CreateMaybeMessage< ::NegotiateMtuRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NegotiateMtuRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NegotiateMtuInfo* Arena::CreateMaybeMessage< ::NegotiateMtuInfo >(Arena* arena) {
  return Arena::CreateInternal< ::NegotiateMtuInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BleStatusInfo* Arena::CreateMaybeMessage< ::BleStatusInfo >(Arena* arena) {
  return Arena::CreateInternal< ::BleStatusInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChangeConnectionPriorityRequest* Arena::CreateMaybeMessage< ::ChangeConnectionPriorityRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ChangeConnectionPriorityRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChangeConnectionPriorityInfo* Arena::CreateMaybeMessage< ::ChangeConnectionPriorityInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ChangeConnectionPriorityInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CharacteristicAddress* Arena::CreateMaybeMessage< ::CharacteristicAddress >(Arena* arena) {
  return Arena::CreateInternal< ::CharacteristicAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceDataEntry* Arena::CreateMaybeMessage< ::ServiceDataEntry >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceDataEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServicesWithCharacteristics* Arena::CreateMaybeMessage< ::ServicesWithCharacteristics >(Arena* arena) {
  return Arena::CreateInternal< ::ServicesWithCharacteristics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceWithCharacteristics* Arena::CreateMaybeMessage< ::ServiceWithCharacteristics >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceWithCharacteristics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DiscoverServicesRequest* Arena::CreateMaybeMessage< ::DiscoverServicesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DiscoverServicesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DiscoverServicesInfo* Arena::CreateMaybeMessage< ::DiscoverServicesInfo >(Arena* arena) {
  return Arena::CreateInternal< ::DiscoverServicesInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DiscoveredService* Arena::CreateMaybeMessage< ::DiscoveredService >(Arena* arena) {
  return Arena::CreateInternal< ::DiscoveredService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DiscoveredCharacteristic* Arena::CreateMaybeMessage< ::DiscoveredCharacteristic >(Arena* arena) {
  return Arena::CreateInternal< ::DiscoveredCharacteristic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Uuid* Arena::CreateMaybeMessage< ::Uuid >(Arena* arena) {
  return Arena::CreateInternal< ::Uuid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GenericFailure* Arena::CreateMaybeMessage< ::GenericFailure >(Arena* arena) {
  return Arena::CreateInternal< ::GenericFailure >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
